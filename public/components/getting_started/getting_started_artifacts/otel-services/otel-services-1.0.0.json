{
  "name": "otel-services",
  "version": "1.0.0",
  "displayName": "Otel Services Demo Flow",
  "description": "Otel Services Demo Use Case with OpenSearch Observability",
  "license": "Apache-2.0",
  "type": "traces",
  "labels": [
    "log",
    "traces",
    "metrics"
  ],
  "author": "OpenSearch",
  "sourceUrl": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/info",
  "workflows": [
    {
      "name": "dashboards",
      "label": "Dashboards & Visualizations",
      "description": "Dashboards and indices that enable you to easily visualize important metrics.",
      "enabled_by_default": false
    }
  ],
  "statics": {
    "logo": {
      "annotation": "OpenTelemetry Logo",
      "path": "logo.png"
    },
    "gallery": [
      {
        "annotation": "Services Step",
        "path": "observability-services-step.png",
        "tags": ["dashboard","services"],
        "savedObject-id": "otel-services-dashboard-1_0_0_ID"
      },
      {
        "annotation": "Ingestion Rate Step",
        "path": "rate-ingestion-step.png",
        "tags": ["dashboard","ingestion"],
        "savedObject-id": "data-ingestion-rate-dashboard-1_0_0_ID"
      },
      {
        "annotation": "Single service monitoring",
        "path": "single-service-step.png",
        "tags": ["dashboard","services"],
        "savedObject-id": "single-service-correlated-dashboard-1_0_0_ID"
      },
      {
        "annotation": "Network Metrics Monitoring",
        "path": "apm-network-metrics-step.png",
        "tags": ["dashboard","metrics"],
        "savedObject-id": "apm-network-metrics-dashboard-1_0_0_ID"
      },
      {
        "annotation": "System Metrics Monitoring",
        "path": "apm-system-metrics-step.png",
        "tags": ["dashboard","metrics"],
        "savedObject-id": "apm-system-metrics-dashboard-1_0_0_ID"
      }
    ]
  },
  "components": [
    {
      "name": "logs",
      "version": "1.0.0"
    },
    {
      "name": "metrics",
      "version": "1.0.0"
    },
    {
      "name": "services",
      "version": "1.0.0"
    },
    {
      "name": "traces",
      "version": "1.0.0"
    }
  ],
  "assets": [
    {
      "name": "getting-started-demo",
      "version": "1.0.0",
      "extension": "ndjson",
      "type": "savedObjectBundle",
      "workflows": [
        "dashboards"
      ]
    },
    {
      "name": "demo-langing-page",
      "version": "1.0.0",
      "extension": "ndjson",
      "type": "savedObjectBundle",
      "workflows": [
        "dashboards"
      ]
    },
    {
      "name": "otel-architecture",
      "version": "1.0.0",
      "extension": "ndjson",
      "type": "savedObjectBundle",
      "workflows": [
        "dashboards"
      ]
    }
  ],
  "getting-started": {
    "ingestion": ["otel-collector","data-prepper"],
    "structured": "true",
    "technology": "OpenTelemetry",
    "protocol": ["otel"],
    "info": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/info/Tutorial.md",
    "live-sample": "true",
    "workflows": [
      {
        "name": "QuickStart",
        "description": "This is a docker-composed based getting started with a predefined openTelemetry Demo sample application ",
        "types": ["logs","traces","metrics"],
        "info": "https://raw.githubusercontent.com/opensearch-project/opensearch-catalog/main/integrations/observability/otel-services/getting-started/GettingStarted.md",
        "steps": [
          {
            "name": "Setup open-telemetry local repository",
            "label": "Staging",
            "phase": "docker",
            "type": "console-cmd",
            "info": ["https://github.com/opensearch-project/opentelemetry-demo.git"],
            "content": "git clone https://github.com/opensearch-project/opentelemetry-demo.git",
            "description": "Setup open-telemetry demo repository locally "
          },
          {
            "name": "Create docker-network",
            "label": "Environment setting",
            "phase": "docker",
            "type": "console-cmd",
            "content": "docker network create opensearch-net",
            "description": "Before running any docker-compose files, create the opensearch-net network"
          },
          {
            "name": "Update docker .env file",
            "label": "Environment Parameters",
            "phase": "docker",
            "type": "console-cmd",
            "input-params": [
              {
                "name": "OPENSEARCH_HOST",
                "description": "Opensearch host",
                "type": "host-name"
              },
              {
                "name": "OPENSEARCH_DASHBOARD_HOST",
                "description": "Opensearch Dashboard host",
                "type": "host-name"
              }
            ],
            "info": ["https://github.com/opensearch-project/opentelemetry-demo/blob/main/.env"],
            "content": "wget https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/.env",
            "description": "Setup docker-compose env variables "
          },
          {
            "name": "Run docker-compose",
            "label": "live container",
            "type": "console-cmd",
            "phase": "docker",
            "info": ["https://github.com/opensearch-project/opentelemetry-demo/blob/main/docker-compose.yml"],
            "description": "Run docker-compose for the otel live example and see the generated indices",
            "content": "docker-compose up -d --scale opensearch-node1=0 --scale opensearch-node2=0 --scale  opensearch-dashboards=0"
          }
        ]
      },
      {
        "name": "Connect To a Collector",
        "description": "This is a workflow for connecting into an existing Otel Collector",
        "types": ["logs","traces","metrics"],
        "info": "https://raw.githubusercontent.com/opensearch-project/opensearch-catalog/main/integrations/observability/otel-services/getting-started/GettingStarted.md",
        "steps": [
          {
            "name": "Configure Data-Prepper Logs exporter",
            "label": "Logs Exporter",
            "type": "console-cmd",
            "phase": "pipeline",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/dataprepper/pipelines.yaml"],
            "description": "Configure Data-prepper logs pipeline and export into opensearch index ",
            "content": "otel-logs-pipeline:\n  workers: 5\n  delay: 10\n  source:\n    otel_logs_source:\n      ssl: false\n  buffer:\n    bounded_blocking:\n  sink:\n    - opensearch:\n        hosts: [\"https://opensearch-node1:9200\"]\n        username: \"admin\"\n        password: \"my_%New%_passW0rd!@#\"\n        insecure: true\n        index_type: custom\n        index: otel-events-%{yyyy.MM.dd}\n        bulk_size: 4\n"
          },
          {
            "name": "Configure Data-Prepper Traces exporter",
            "label": "Traces Exporter",
            "type": "console-cmd",
            "phase": "pipeline",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/dataprepper/pipelines.yaml"],
            "description": "Configure Data-prepper Traces pipeline and export into opensearch index ",
            "content": "entry-pipeline:\n  delay: \"100\"\n  source:\n    otel_trace_source:\n      ssl: false\n  sink:\n    - pipeline:\n        name: \"raw-pipeline\"\n    - pipeline:\n        name: \"service-map-pipeline\"\nraw-pipeline:\n  source:\n    pipeline:\n      name: \"entry-pipeline\"\n  processor:\n    - otel_trace_raw:\n  sink:\n    - opensearch:\n        hosts: [ \"https://opensearch-node1:9200\" ]\n        insecure: true        \n        username: \"admin\"\n        password: \"my_%New%_passW0rd!@#\"\n        index_type: trace-analytics-raw"
          },
          {
            "name": "Configure Data-Prepper Metrics exporter",
            "label": "Metrics Exporter",
            "type": "console-cmd",
            "phase": "pipeline",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/dataprepper/pipelines.yaml"],
            "description": "Configure Data-prepper Metrics pipeline and export into opensearch index ",
            "content": "otel-metrics-pipeline:\n  workers: 8\n  delay: 3000\n  source:\n    otel_metrics_source:\n      health_check_service: true\n      ssl: false\n  buffer:\n    bounded_blocking:\n      buffer_size: 1024 # max number of records the buffer accepts\n      batch_size: 1024 # max number of records the buffer drains after each read\n  processor:\n    - otel_metrics:\n        calculate_histogram_buckets: true\n        calculate_exponential_histogram_buckets: true\n        exponential_histogram_max_allowed_scale: 10\n        flatten_attributes: false\n  sink:\n    - opensearch:\n        hosts: [\"https://opensearch-node1:9200\"]\n        username: \"admin\"\n        password: \"my_%New%_passW0rd!@#\"\n        insecure: true\n        index_type: custom\n        index: ss4o_metrics-otel-%{yyyy.MM.dd}\n        bulk_size: 4\n        template_type: index-template"
          },
          {
            "name": "Configure Data-Prepper Services exporter",
            "label": "Services Exporter",
            "type": "console-cmd",
            "phase": "pipeline",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/dataprepper/pipelines.yaml"],
            "description": "Configure Data-prepper Services Processor to build the service network map pipeline and export into opensearch index ",
            "content": "service-map-pipeline:\n  delay: \"100\"\n  source:\n    pipeline:\n      name: \"entry-pipeline\"\n  processor:\n    - service_map_stateful:\n  sink:\n    - opensearch:\n        hosts: [\"https://opensearch-node1:9200\"]\n        insecure: true\n        username: \"admin\"\n        password: \"my_%New%_passW0rd!@#\"\n        index_type: trace-analytics-service-map"
          },
          {
            "name": "Configure Data-Prepper inside Otel Collector",
            "label": "OTEL Collector Logs services",
            "type": "console-cmd",
            "phase": "Collector",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/otelcollector/otelcol-config.yml"],
            "description": "Configure Data-prepper Pipelines within the Otel Processor logs pipeline ",
            "content": "  otlp/logs:\n    endpoint: \"data-prepper:21892\"\n    tls:\n      insecure: true\n      insecure_skip_verify: true \n  service:\n  pipelines:\n    logs:\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [otlp/logs, debug]"
          },
          {
            "name": "Configure Data-Prepper inside Otel Collector",
            "label": "OTEL Collector Traces services",
            "type": "console-cmd",
            "phase": "Collector",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/otelcollector/otelcol-config.yml"],
            "description": "Configure Data-prepper Pipelines within the Otel Processor Traces pipeline ",
            "content": "  otlp/traces:\n    endpoint: \"data-prepper:21890\"\n    tls:\n      insecure: true\n      insecure_skip_verify: true \n  service:\n  pipelines:\n    traces:\n      receivers: [otlp]\n      processors: [batch]\n      exporters: [otlp, debug, spanmetrics, otlp/traces]"
          },
          {
            "name": "Configure Data-Prepper inside Otel Collector",
            "label": "OTEL Collector Metrics services",
            "type": "console-cmd",
            "phase": "Collector",
            "info": ["https://raw.githubusercontent.com/opensearch-project/opentelemetry-demo/main/src/otelcollector/otelcol-config.yml"],
            "description": "Configure Data-prepper Pipelines within the Otel Processor Metrics pipeline ",
            "content": "  otlp/metrics:\n    endpoint: \"data-prepper:21891\"\n    tls:\n      insecure: true\n      insecure_skip_verify: true \n  service:\n  pipelines:\n    metrics:\n      receivers: [otlp, spanmetrics]\n      processors: [filter/ottl, transform, batch]\n      exporters: [otlphttp/prometheus, otlp/metrics, debug]"
          }
        ]
      }
    ],
    "schema": [
      {
        "type": "logs",
        "info": ["https://opensearch.org/docs/latest/im-plugin/index-templates","https://github.com/opensearch-project/opensearch-catalog/blob/main/docs/schema/observability/Naming-convention.md"],
        "content": "PUT _index_template/ss4o_logs_template",
        "description": "Setup simple schema logs index template in the dev console, and than upload the index pattern corresponding to that template",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/schemas/logs-1.0.0.mapping.json",
        "alias": "otel-events",
        "index-pattern-name": "ss4o_logs-*-*"
      },
      {
        "type": "traces",
        "info": ["https://opensearch.org/docs/latest/im-plugin/index-templates","https://github.com/opensearch-project/opensearch-catalog/blob/main/docs/schema/observability/Naming-convention.md"],
        "content": "PUT _index_template/ss4o_traces_template",
        "description": "Setup simple schema traces index template in the dev console, and than upload the index pattern corresponding to that template",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/schemas/traces-1.0.0.mapping.json",
        "alias": "otel-v1-apm-span",
        "index-pattern-name": "ss4o_traces-*-*"
      },
      {
        "type": "services",
        "info": ["https://opensearch.org/docs/latest/im-plugin/index-templates","https://github.com/opensearch-project/opensearch-catalog/blob/main/docs/schema/observability/Naming-convention.md"],
        "content": "PUT _index_template/ss4o_services_template",
        "description": "Setup simple schema services index template in the dev console, and than upload the index pattern corresponding to that template",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/schemas/services-1.0.0.mapping.json",
        "alias": "otel-v1-apm-service-map",
        "index-pattern-name": "ss4o_services-*-*"
      },
      {
        "type": "metrics",
        "info": ["https://opensearch.org/docs/latest/im-plugin/index-templates","https://github.com/opensearch-project/opensearch-catalog/blob/main/docs/schema/observability/Naming-convention.md"],
        "content": "PUT _index_template/ss4o_metrics_template",
        "description": "Setup simple schema metrics index template in the dev console, and than upload the index pattern corresponding to that template",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/schemas/metrics-1.0.0.mapping.json",
        "alias": "otel-metrics",
        "index-pattern-name": "ss4o_metrics-*-*"
      }
    ],
    "index-patterns": {
      "type": ["logs","services","traces","metrics"],
      "info": ["https://opensearch.org/docs/latest/dashboards/management/index-patterns/"],
      "description": "Import index patterns `.ndjson` file to the saved objects",
      "index-pattern": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/otel-services/assets/getting-started-demo-1.0.0.ndjson",
      "index-patterns-name": ["otel-v1-apm-span*","ss4o_metrics*","otel-events-*","otel-v1-apm-service-map"]

    }
  },
  "sampleData": {
    "path": "traces-samples.json"
  }
}
