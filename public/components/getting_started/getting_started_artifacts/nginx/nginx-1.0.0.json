{
  "name": "nginx",
  "version": "1.0.0",
  "displayName": "Nginx",
  "description": "Analyze Nginx access logs.",
  "license": "Apache-2.0",
  "type": "logs",
  "labels": [
    "Observability",
    "Logs",
    "Flint S3"
  ],
  "author": "OpenSearch",
  "sourceUrl": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx",
  "workflows": [
    {
      "name": "queries",
      "label": "Queries (recommended)",
      "description": "Tables and pre-written queries for quickly getting insights on your data.",
      "enabled_by_default": true
    },
    {
      "name": "dashboards",
      "label": "Dashboards & Visualizations",
      "description": "Dashboards and indices that enable you to easily visualize important metrics.",
      "enabled_by_default": false
    }
  ],
  "statics": {
    "logo": {
      "annotation": "NginX Logo",
      "path": "logo.svg"
    },
    "gallery": [
      {
        "annotation": "NginX Dashboard",
        "path": "dashboard1.png",
        "tags": ["dashboard"],
        "savedObject-id": "nginx-dashboard-1.0.0"
      }
    ]
  },
  "components": [
    {
      "name": "communication",
      "version": "1.0.0"
    },
    {
      "name": "http",
      "version": "1.0.0"
    },
    {
      "name": "logs",
      "version": "1.0.0"
    }
  ],
  "assets": [
    {
      "name": "getting-started-tutorial",
      "version": "1.0.0",
      "extension": "ndjson",
      "type": "savedObjectBundle",
      "workflows": [
        "dashboards"
      ]
    },
    {
      "name": "nginx",
      "version": "1.0.0",
      "extension": "ndjson",
      "type": "savedObjectBundle",
      "workflows": [
        "dashboards"
      ]
    },
    {
      "name": "create_table",
      "version": "1.0.0",
      "extension": "sql",
      "type": "query"
    },
    {
      "name": "create_skipping_index",
      "version": "1.0.0",
      "extension": "sql",
      "type": "query",
      "workflows": [
        "queries"
      ]
    },
    {
      "name": "create_mv",
      "version": "1.0.0",
      "extension": "sql",
      "type": "query",
      "workflows": [
        "dashboards"
      ]
    },
    {
      "name": "example_queries",
      "version": "1.0.0",
      "extension": "ndjson",
      "type": "savedObjectBundle",
      "workflows": [
        "queries"
      ]
    }
  ],
  "getting-started": {
    "info": {
      "url": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/getting-started/Getting-Started.md",
      "title": "Getting Started Guide"
    },
    "ingestion": ["fluent-bit"],
    "structured": "true",
    "technology": "nginx",
    "protocol": ["syslog","otel"],
    "live-sample": "true",
    "workflows": [
      {
        "name": "Self managed",
        "description": "This is a fluent-bit based getting started instructions tutorial",
        "steps": [
          {
            "name": "Fluent-Bit Parser",
            "type": "console-cmd",
            "phase": "ingestion",
            "label": "Log Parsing",
            "info": [
              {
                "url": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/getting-started/fluent-bit/parsers.conf",
                "title": "Fluent-Bit Parser Configuration"
              }
            ],
            "description": "Setup Fluent-Bit parser config file parsing Nginx access log fields",
            "content": "[PARSER]\n    Name   nginx\n    Format regex\n    Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n"
          },
          {
            "name": "Fluent-Bit Log Converter",
            "type": "console-cmd",
            "phase": "transformation",
            "label": "Log Parsing",
            "info": [
              {
                "url": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/getting-started/fluent-bit/otel-converter.lua",
                "title": "Fluent-Bit Log Converter Configuration"
              }
            ],
            "description": "Setup Fluent-Bit logs converter lua script config file converting Nginx access log into Simple schema format",
            "content": "local hexCharset = \"0123456789abcdef\"\nlocal function randHex(length)\n    if length > 0 then\n        local index = math.random(1, #hexCharset)\n        return randHex(length - 1) .. hexCharset:sub(index, index)\n    else\n        return \"\"\n    end\nend\n\nlocal function format_apache(c)\n    return string.format(\n        \"%s - %s [%s] \\\"%s %s HTTP/1.1\\\" %s %s\",\n        c.host,\n        c.user,\n        os.date(\"%d/%b/%Y:%H:%M:%S %z\"),\n        c.method,\n        c.path,\n        c.code,\n        c.size\n    )\nend\n\nlocal function format_nginx(c)\n    return string.format(\n        \"%s %s %s [%s] \\\"%s %s HTTP/1.1\\\" %s %s \\\"%s\\\" \\\"%s\\\"\",\n        c.remote,\n        c.host,\n        c.user,\n        os.date(\"%d/%b/%Y:%H:%M:%S %z\"),\n        c.method,\n        c.path,\n        c.code,\n        c.size,\n        c.referer,\n        c.agent\n    )\nend\n\nlocal formats = {\n    [\"apache.access\"] = format_apache,\n    [\"nginx.access\"] = format_nginx\n}\n\nfunction convert_to_otel(tag, timestamp, record)\n    local data = {\n        traceId=randHex(32),\n        spanId=randHex(16),\n        [\"@timestamp\"]=os.date(\"!%Y-%m-%dT%H:%M:%S.000Z\"),\n        observedTimestamp=os.date(\"!%Y-%m-%dT%H:%M:%S.000Z\"),\n        body=formats[tag](record),\n        attributes={\n            data_stream={\n                dataset=tag,\n                namespace=\"production\",\n                type=\"logs\"\n            }\n        },\n        event={\n            category=\"web\",\n            name=\"access\",\n            domain=tag,\n            kind=\"event\",\n            result=\"success\",\n            type=\"access\"\n        },\n        http={\n            request={\n                method=record.method\n            },\n            response={\n                bytes=tonumber(record.size),\n                status_code=tonumber(record.code)\n            },\n            flavor=\"1.1\",\n            url=record.path\n        },\n        communication={\n            source={\n                address=\"127.0.0.1\",\n                ip=record.remote\n            }\n        }\n    }\n    return 1, timestamp, data\nend\n"
          },
          {
            "name": "Fluent-Bit Setup",
            "type": "console-cmd",
            "phase": "ingestion",
            "label": "Agent Set-Up",
            "info": [
              {
                "url": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/getting-started/fluent-bit/fluent-bit.conf",
                "title": "Fluent-Bit Configuration"
              }
            ],
            "description": "Setup Fluent-Bit conf file including logs parsing and OpenSearch access",
            "input-params": [
              {
                "name": "opensearch-endpoint",
                "description": "Opensearch host url",
                "type": "host-name"
              },
              {
                "name": "ss4o_logs-nginx-prod",
                "description": "logs sink index name",
                "type": "index-name"
              }
            ],
            "content": "[SERVICE]\n    Parsers_File parsers.conf\n\n[INPUT]\n    Name forward\n    Port 24224\n\n[FILTER]\n    Name parser\n    Match nginx.access\n    Key_Name log\n    Parser nginx\n\n[FILTER]\n    Name parser\n    Match apache.access\n    Key_Name log\n    Parser apache\n\n[Filter]\n    Name    lua\n    Match   *\n    Script  otel-converter.lua\n    call    convert_to_otel\n\n[OUTPUT]\n    Name  opensearch\n    Match nginx.access\n    Host  ${opensearch-endpoint}\n    Port  9200\n    Index ${ss4o_logs-nginx-prod}\n    Suppress_Type_Name On\n    tls             On\n    tls.verify      Off\n    HTTP_User       admin\n    HTTP_Passwd     my_%New%_passW0rd!@#\n\n[OUTPUT]\n    Name  opensearch\n    Match apache.access\n    Host  ${opensearch-endpoint}\n    Port  9200\n    Index ${ss4o_logs-nginx-prod}\n    Suppress_Type_Name On\n    tls             On\n    tls.verify      Off\n    HTTP_User       admin\n    HTTP_Passwd     my_%New%_passW0rd!@#\n\n[OUTPUT]\n    Name stdout\n    Match nginx.access"
          }
        ]
      }
    ],
    "schema": [
      {
        "type": "http",
        "content": "PUT _component_template/http",
        "description": "Setup simple schema http component template in the dev console",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/schemas/http-1.0.0.mapping.json"
      },
      {
        "type": "communication",
        "content": "PUT _component_template/communication",
        "description": "Setup simple schema communication component template in the dev console",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/schemas/communication-1.0.0.mapping.json"
      },
      {
        "type": "logs",
        "info": [
          {
            "url": "https://opensearch.org/docs/latest/im-plugin/index-templates",
            "title": "Index Template Documentation"
          },
          {
            "url": "https://github.com/opensearch-project/opensearch-catalog/blob/main/docs/schema/observability/Naming-convention.md",
            "title": "Naming Convention"
          }
        ],
        "content": "PUT _index_template/ss4o_logs_template",
        "description": "Setup simple schema logs index template in the dev console",
        "index-template": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/schemas/logs-1.0.0.mapping.json",
        "index-pattern-name": "ss4o_logs-*-*"
      }
    ],
    "index-patterns": {
      "type": ["logs"],
      "info": [
        {
          "url": "https://opensearch.org/docs/latest/dashboards/management/index-patterns/",
          "title": "Index Pattern Management Guide"
        }
      ],
      "description": "Import index patterns `.ndjson` file to the saved objects",
      "index-pattern": "https://github.com/opensearch-project/opensearch-catalog/blob/main/integrations/observability/nginx/assets/getting-started-tutorial-1.0.0.ndjson",
      "index-patterns-name": ["ss4o_logs-*-*"]
    }
  },
  "sampleData": {
    "path": "sample.json"
  }
}
