// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Installed Integrations Table test Renders the empty installed integrations table 1`] = `
<InstalledIntegrationsTable
  datasourceName="test"
  datasourceType="S3GLUE"
  integrations={Array []}
>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
  <EuiPanel>
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
    >
      <NoInstalledIntegrations
        toggleFlyout={[Function]}
      >
        <EuiFlexGroup
          alignItems="center"
          direction="column"
          gutterSize="xs"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionColumn euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiIcon
                  glyphName="iInCircle"
                  size="xxl"
                  type="iInCircle"
                >
                  <EuiIconBeaker
                    aria-hidden={true}
                    className="euiIcon euiIcon--xxLarge euiIcon-isLoading"
                    focusable="false"
                    glyphName="iInCircle"
                    role="img"
                    style={null}
                  >
                    <svg
                      aria-hidden={true}
                      className="euiIcon euiIcon--xxLarge euiIcon-isLoading"
                      focusable="false"
                      glyphName="iInCircle"
                      height={16}
                      role="img"
                      style={null}
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                      />
                    </svg>
                  </EuiIconBeaker>
                </EuiIcon>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiText
                  textAlign="center"
                >
                  <div
                    className="euiText euiText--medium"
                  >
                    <EuiTextAlign
                      textAlign="center"
                    >
                      <div
                        className="euiTextAlign euiTextAlign--center"
                      >
                        <p
                          style={
                            Object {
                              "margin-bottom": "8px",
                            }
                          }
                        >
                          <b>
                            There are no installed Integrations
                          </b>
                          <br />
                          Add integrations to get started.
                        </p>
                      </div>
                    </EuiTextAlign>
                  </div>
                </EuiText>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <AddIntegrationButton
                  toggleFlyout={[Function]}
                >
                  <EuiSmallButton
                    onClick={[Function]}
                  >
                    <EuiButton
                      onClick={[Function]}
                      size="s"
                    >
                      <EuiButtonDisplay
                        baseClassName="euiButton"
                        disabled={false}
                        element="button"
                        isDisabled={false}
                        onClick={[Function]}
                        size="s"
                        type="button"
                      >
                        <button
                          className="euiButton euiButton--primary euiButton--small"
                          disabled={false}
                          onClick={[Function]}
                          style={
                            Object {
                              "minWidth": undefined,
                            }
                          }
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconGap="m"
                            iconSide="left"
                            textProps={
                              Object {
                                "className": "euiButton__text",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButton__content"
                            >
                              <span
                                className="euiButton__text"
                              >
                                Add Integrations
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonDisplay>
                    </EuiButton>
                  </EuiSmallButton>
                </AddIntegrationButton>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </NoInstalledIntegrations>
    </div>
  </EuiPanel>
</InstalledIntegrationsTable>
`;

exports[`Installed Integrations Table test Renders the installed integrations table 1`] = `
<InstalledIntegrationsTable
  datasourceName="unknown"
  datasourceType="S3GLUE"
  integrations={
    Array [
      Object {
        "assets": Array [
          Object {
            "assetId": "9506c132-f466-4ce3-a875-f187ddec587c",
            "assetType": "index-pattern",
            "description": "ss4o_logs_waf-aws_waf-sample-sample",
            "isDefaultAsset": false,
            "status": "available",
          },
          Object {
            "assetId": "7770e5be-6f10-4435-9773-021c6188bfe5",
            "assetType": "visualization",
            "description": "logs-waf-Top Client IPs",
            "isDefaultAsset": false,
            "status": "available",
          },
          Object {
            "assetId": "36f26341-22f0-49c5-9820-f787afb4090c",
            "assetType": "dashboard",
            "description": "logs-waf-dashboard",
            "isDefaultAsset": true,
            "status": "available",
          },
        ],
        "creationDate": "2024-03-12T16:23:18.053Z",
        "dataSource": "ss4o_logs_waf-aws_waf-sample-sample",
        "id": "d5b55c60-e08c-11ee-9c80-ff3b93498fea",
        "name": "aws_waf-sample",
        "status": "available",
        "templateName": "aws_waf",
      },
    ]
  }
>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
  <EuiPanel>
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
    >
      <EuiTitle>
        <h2
          className="euiTitle euiTitle--medium"
        >
          Installed Integrations
        </h2>
      </EuiTitle>
      <EuiSpacer>
        <div
          className="euiSpacer euiSpacer--l"
        />
      </EuiSpacer>
      <EuiFlexGroup>
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <EuiFlexItem>
            <div
              className="euiFlexItem"
            >
              <EuiCompressedFieldSearch
                compressed={true}
                fullWidth={true}
                incremental={false}
                isClearable={true}
                isLoading={false}
                onChange={[Function]}
                placeholder="Search..."
              >
                <EuiFormControlLayout
                  compressed={true}
                  fullWidth={true}
                  icon="search"
                  isLoading={false}
                >
                  <div
                    className="euiFormControlLayout euiFormControlLayout--fullWidth euiFormControlLayout--compressed"
                  >
                    <div
                      className="euiFormControlLayout__childrenWrapper"
                    >
                      <EuiValidatableControl>
                        <input
                          className="euiFieldSearch euiFieldSearch--fullWidth euiFieldSearch--compressed"
                          onChange={[Function]}
                          onKeyUp={[Function]}
                          placeholder="Search..."
                          type="search"
                        />
                      </EuiValidatableControl>
                      <EuiFormControlLayoutIcons
                        compressed={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayoutIcons"
                        >
                          <EuiFormControlLayoutCustomIcon
                            size="s"
                            type="search"
                          >
                            <span
                              className="euiFormControlLayoutCustomIcon"
                            >
                              <EuiIcon
                                aria-hidden="true"
                                className="euiFormControlLayoutCustomIcon__icon"
                                size="s"
                                type="search"
                              >
                                <EuiIconBeaker
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--small euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--small euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                    />
                                  </svg>
                                </EuiIconBeaker>
                              </EuiIcon>
                            </span>
                          </EuiFormControlLayoutCustomIcon>
                        </div>
                      </EuiFormControlLayoutIcons>
                    </div>
                  </div>
                </EuiFormControlLayout>
              </EuiCompressedFieldSearch>
            </div>
          </EuiFlexItem>
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <AddIntegrationButton
                fill={true}
                toggleFlyout={[Function]}
              >
                <EuiSmallButton
                  fill={true}
                  onClick={[Function]}
                >
                  <EuiButton
                    fill={true}
                    onClick={[Function]}
                    size="s"
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      fill={true}
                      isDisabled={false}
                      onClick={[Function]}
                      size="s"
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary euiButton--small euiButton--fill"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconGap="m"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text"
                            >
                              Add Integrations
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </EuiSmallButton>
              </AddIntegrationButton>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
      <EuiSpacer>
        <div
          className="euiSpacer euiSpacer--l"
        />
      </EuiSpacer>
      <EuiInMemoryTable
        columns={
          Array [
            Object {
              "field": "locator",
              "name": "Instance Name",
              "render": [Function],
            },
            Object {
              "field": "status",
              "name": "Status",
              "render": [Function],
            },
            Object {
              "field": "assets",
              "name": "Asset Count",
            },
          ]
        }
        items={
          Array [
            Object {
              "assets": 3,
              "locator": Object {
                "id": "d5b55c60-e08c-11ee-9c80-ff3b93498fea",
                "name": "aws_waf-sample",
              },
              "name": "aws_waf-sample",
              "status": "available",
            },
          ]
        }
        responsive={true}
        tableLayout="fixed"
      >
        <EuiBasicTable
          columns={
            Array [
              Object {
                "field": "locator",
                "name": "Instance Name",
                "render": [Function],
              },
              Object {
                "field": "status",
                "name": "Status",
                "render": [Function],
              },
              Object {
                "field": "assets",
                "name": "Asset Count",
              },
            ]
          }
          items={
            Array [
              Object {
                "assets": 3,
                "locator": Object {
                  "id": "d5b55c60-e08c-11ee-9c80-ff3b93498fea",
                  "name": "aws_waf-sample",
                },
                "name": "aws_waf-sample",
                "status": "available",
              },
            ]
          }
          noItemsMessage="No items found"
          onChange={[Function]}
          responsive={true}
          tableLayout="fixed"
        >
          <div
            className="euiBasicTable"
          >
            <div>
              <EuiTableHeaderMobile>
                <div
                  className="euiTableHeaderMobile"
                >
                  <EuiFlexGroup
                    alignItems="baseline"
                    justifyContent="spaceBetween"
                    responsive={false}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                    >
                      <EuiFlexItem
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        />
                      </EuiFlexItem>
                      <EuiFlexItem
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        />
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </div>
              </EuiTableHeaderMobile>
              <EuiTable
                id="random_html_id"
                responsive={true}
                tableLayout="fixed"
              >
                <table
                  className="euiTable euiTable--responsive"
                  id="random_html_id"
                  tabIndex={-1}
                >
                  <EuiScreenReaderOnly>
                    <caption
                      className="euiScreenReaderOnly euiTableCaption"
                    >
                      <EuiDelayRender
                        delay={500}
                      />
                    </caption>
                  </EuiScreenReaderOnly>
                  <EuiTableHeader>
                    <thead>
                      <tr>
                        <EuiTableHeaderCell
                          align="left"
                          data-test-subj="tableHeaderCell_locator_0"
                          key="_data_h_locator_0"
                        >
                          <th
                            className="euiTableHeaderCell"
                            data-test-subj="tableHeaderCell_locator_0"
                            role="columnheader"
                            scope="col"
                            style={
                              Object {
                                "width": undefined,
                              }
                            }
                          >
                            <CellContents
                              className="euiTableCellContent"
                              showSortMsg={false}
                            >
                              <span
                                className="euiTableCellContent"
                              >
                                <EuiInnerText>
                                  <EuiI18n
                                    default="{innerText}; {description}"
                                    token="euiTableHeaderCell.titleTextWithDesc"
                                    values={
                                      Object {
                                        "description": undefined,
                                        "innerText": "Instance Name",
                                      }
                                    }
                                  >
                                    <span
                                      className="euiTableCellContent__text"
                                      title="Instance Name"
                                    >
                                      Instance Name
                                    </span>
                                  </EuiI18n>
                                </EuiInnerText>
                              </span>
                            </CellContents>
                          </th>
                        </EuiTableHeaderCell>
                        <EuiTableHeaderCell
                          align="left"
                          data-test-subj="tableHeaderCell_status_1"
                          key="_data_h_status_1"
                        >
                          <th
                            className="euiTableHeaderCell"
                            data-test-subj="tableHeaderCell_status_1"
                            role="columnheader"
                            scope="col"
                            style={
                              Object {
                                "width": undefined,
                              }
                            }
                          >
                            <CellContents
                              className="euiTableCellContent"
                              showSortMsg={false}
                            >
                              <span
                                className="euiTableCellContent"
                              >
                                <EuiInnerText>
                                  <EuiI18n
                                    default="{innerText}; {description}"
                                    token="euiTableHeaderCell.titleTextWithDesc"
                                    values={
                                      Object {
                                        "description": undefined,
                                        "innerText": "Status",
                                      }
                                    }
                                  >
                                    <span
                                      className="euiTableCellContent__text"
                                      title="Status"
                                    >
                                      Status
                                    </span>
                                  </EuiI18n>
                                </EuiInnerText>
                              </span>
                            </CellContents>
                          </th>
                        </EuiTableHeaderCell>
                        <EuiTableHeaderCell
                          align="left"
                          data-test-subj="tableHeaderCell_assets_2"
                          key="_data_h_assets_2"
                        >
                          <th
                            className="euiTableHeaderCell"
                            data-test-subj="tableHeaderCell_assets_2"
                            role="columnheader"
                            scope="col"
                            style={
                              Object {
                                "width": undefined,
                              }
                            }
                          >
                            <CellContents
                              className="euiTableCellContent"
                              showSortMsg={false}
                            >
                              <span
                                className="euiTableCellContent"
                              >
                                <EuiInnerText>
                                  <EuiI18n
                                    default="{innerText}; {description}"
                                    token="euiTableHeaderCell.titleTextWithDesc"
                                    values={
                                      Object {
                                        "description": undefined,
                                        "innerText": "Asset Count",
                                      }
                                    }
                                  >
                                    <span
                                      className="euiTableCellContent__text"
                                      title="Asset Count"
                                    >
                                      Asset Count
                                    </span>
                                  </EuiI18n>
                                </EuiInnerText>
                              </span>
                            </CellContents>
                          </th>
                        </EuiTableHeaderCell>
                      </tr>
                    </thead>
                  </EuiTableHeader>
                  <EuiTableBody
                    bodyRef={[Function]}
                  >
                    <tbody>
                      <EuiTableRow
                        isSelected={false}
                      >
                        <tr
                          className="euiTableRow"
                        >
                          <EuiTableRowCell
                            align="left"
                            key="_data_column_locator_0_0"
                            mobileOptions={
                              Object {
                                "header": "Instance Name",
                                "render": undefined,
                              }
                            }
                            setScopeRow={false}
                            textOnly={false}
                          >
                            <td
                              className="euiTableRowCell"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <div
                                className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                              >
                                Instance Name
                              </div>
                              <div
                                className="euiTableCellContent euiTableCellContent--overflowingContent"
                              >
                                <EuiLink
                                  className=""
                                  data-test-subj="aws_waf-sampleIntegrationLink"
                                  href="/app/integrations#/installed/d5b55c60-e08c-11ee-9c80-ff3b93498fea"
                                  key=".0"
                                >
                                  <a
                                    className="euiLink euiLink--primary"
                                    data-test-subj="aws_waf-sampleIntegrationLink"
                                    href="/app/integrations#/installed/d5b55c60-e08c-11ee-9c80-ff3b93498fea"
                                    rel="noreferrer"
                                  >
                                    aws_waf-sample
                                  </a>
                                </EuiLink>
                              </div>
                            </td>
                          </EuiTableRowCell>
                          <EuiTableRowCell
                            align="left"
                            key="_data_column_status_0_1"
                            mobileOptions={
                              Object {
                                "header": "Status",
                                "render": undefined,
                              }
                            }
                            setScopeRow={false}
                            textOnly={false}
                          >
                            <td
                              className="euiTableRowCell"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <div
                                className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                              >
                                Status
                              </div>
                              <div
                                className="euiTableCellContent euiTableCellContent--overflowingContent"
                              >
                                <IntegrationHealthBadge
                                  className=""
                                  key=".0"
                                  status="available"
                                >
                                  <EuiHealth
                                    color="success"
                                  >
                                    <div
                                      className="euiHealth euiHealth--textSizeS"
                                    >
                                      <EuiFlexGroup
                                        alignItems="center"
                                        gutterSize="xs"
                                        responsive={false}
                                      >
                                        <div
                                          className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow"
                                        >
                                          <EuiFlexItem
                                            grow={false}
                                          >
                                            <div
                                              className="euiFlexItem euiFlexItem--flexGrowZero"
                                            >
                                              <EuiIcon
                                                color="success"
                                                type="dot"
                                              >
                                                <EuiIconBeaker
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon--success euiIcon-isLoading"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon--success euiIcon-isLoading"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                    />
                                                  </svg>
                                                </EuiIconBeaker>
                                              </EuiIcon>
                                            </div>
                                          </EuiFlexItem>
                                          <EuiFlexItem
                                            grow={false}
                                          >
                                            <div
                                              className="euiFlexItem euiFlexItem--flexGrowZero"
                                            >
                                              Active
                                            </div>
                                          </EuiFlexItem>
                                        </div>
                                      </EuiFlexGroup>
                                    </div>
                                  </EuiHealth>
                                </IntegrationHealthBadge>
                              </div>
                            </td>
                          </EuiTableRowCell>
                          <EuiTableRowCell
                            align="left"
                            key="_data_column_assets_0_2"
                            mobileOptions={
                              Object {
                                "header": "Asset Count",
                                "render": undefined,
                              }
                            }
                            setScopeRow={false}
                            textOnly={true}
                          >
                            <td
                              className="euiTableRowCell"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <div
                                className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                              >
                                Asset Count
                              </div>
                              <div
                                className="euiTableCellContent"
                              >
                                <span
                                  className="euiTableCellContent__text"
                                >
                                  3
                                </span>
                              </div>
                            </td>
                          </EuiTableRowCell>
                        </tr>
                      </EuiTableRow>
                    </tbody>
                  </EuiTableBody>
                </table>
              </EuiTable>
            </div>
          </div>
        </EuiBasicTable>
      </EuiInMemoryTable>
    </div>
  </EuiPanel>
</InstalledIntegrationsTable>
`;

exports[`Installed Integrations Table test Renders the installed integrations table flyout 1`] = `
<InstallIntegrationFlyout
  closeFlyout={[Function]}
  datasourceName="test"
  datasourceType="S3GLUE"
>
  <EuiFlyout
    hideCloseButton={false}
    onClose={[Function]}
  >
    <OuiWindowEvent
      event="keydown"
      handler={[Function]}
    />
    <EuiOverlayMask
      headerZindexLocation="below"
      onClick={[Function]}
    >
      <Portal
        containerInfo={
          <div
            class="euiOverlayMask euiOverlayMask--belowHeader"
          >
            <div
              aria-hidden="true"
              data-aria-hidden="true"
              data-focus-guard="true"
              style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
              tabindex="0"
            />
            <div
              data-focus-lock-disabled="false"
            >
              <div
                class="euiFlyout euiFlyout--medium euiFlyout--paddingLarge"
                role="dialog"
                tabindex="-1"
              >
                <button
                  aria-label="Close this dialog"
                  class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                  data-test-subj="euiFlyoutCloseButton"
                  type="button"
                >
                  <svg
                    aria-hidden="true"
                    class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                    focusable="false"
                    height="16"
                    role="img"
                    viewBox="0 0 16 16"
                    width="16"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                    />
                  </svg>
                </button>
                <div
                  class="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
                  id="availableIntegrationsArea"
                  role="main"
                >
                  <div
                    class="euiSpacer euiSpacer--l"
                  />
                  <div
                    class="euiSpacer euiSpacer--xxl"
                  />
                  <div
                    class="euiText euiText--medium"
                  >
                    <div
                      class="euiTextAlign euiTextAlign--center"
                    >
                      <h2>
                        No Integrations Available
                      </h2>
                    </div>
                  </div>
                  <div
                    class="euiSpacer euiSpacer--m"
                  />
                </div>
              </div>
            </div>
            <div
              aria-hidden="true"
              data-aria-hidden="true"
              data-focus-guard="true"
              style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
              tabindex="0"
            />
          </div>
        }
      >
        <EuiFocusTrap
          clickOutsideDisables={false}
          disabled={false}
          noIsolation={true}
          returnFocus={true}
          scrollLock={false}
        >
          <ForwardRef
            enabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            returnFocus={true}
            scrollLock={false}
          >
            <ForwardRef
              enabled={true}
              noIsolation={true}
              onClickOutside={[Function]}
              returnFocus={true}
              scrollLock={false}
              sideCar={[Function]}
            >
              <ForwardRef(FocusLockUI)
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "classNames": Object {
                      "fullWidth": "width-before-scroll-bar",
                      "zeroRight": "right-scroll-bar-position",
                    },
                    "defaultProps": Object {
                      "enabled": true,
                      "inert": false,
                      "removeScrollBar": true,
                    },
                    "render": [Function],
                  }
                }
                autoFocus={true}
                crossFrame={true}
                disabled={false}
                lockProps={
                  Object {
                    "allowPinchZoom": undefined,
                    "as": undefined,
                    "enabled": false,
                    "inert": undefined,
                    "onMouseDown": [Function],
                    "onTouchStart": [Function],
                    "shards": undefined,
                    "sideCar": [Function],
                    "style": undefined,
                  }
                }
                noFocusGuards={false}
                onActivation={[Function]}
                onDeactivation={[Function]}
                persistentFocus={false}
                returnFocus={true}
                sideCar={[Function]}
              >
                <div
                  data-focus-guard={true}
                  key="guard-first"
                  style={
                    Object {
                      "height": "0px",
                      "left": "1px",
                      "overflow": "hidden",
                      "padding": 0,
                      "position": "fixed",
                      "top": "1px",
                      "width": "1px",
                    }
                  }
                  tabIndex={0}
                />
                <RequireSideCar
                  autoFocus={true}
                  crossFrame={true}
                  disabled={false}
                  id={Object {}}
                  observed={
                    <div
                      data-focus-lock-disabled="false"
                    >
                      <div
                        class="euiFlyout euiFlyout--medium euiFlyout--paddingLarge"
                        role="dialog"
                        tabindex="-1"
                      >
                        <button
                          aria-label="Close this dialog"
                          class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                          data-test-subj="euiFlyoutCloseButton"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                            focusable="false"
                            height="16"
                            role="img"
                            viewBox="0 0 16 16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                            />
                          </svg>
                        </button>
                        <div
                          class="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
                          id="availableIntegrationsArea"
                          role="main"
                        >
                          <div
                            class="euiSpacer euiSpacer--l"
                          />
                          <div
                            class="euiSpacer euiSpacer--xxl"
                          />
                          <div
                            class="euiText euiText--medium"
                          >
                            <div
                              class="euiTextAlign euiTextAlign--center"
                            >
                              <h2>
                                No Integrations Available
                              </h2>
                            </div>
                          </div>
                          <div
                            class="euiSpacer euiSpacer--m"
                          />
                        </div>
                      </div>
                    </div>
                  }
                  onActivation={[Function]}
                  onDeactivation={[Function]}
                  persistentFocus={false}
                  returnFocus={[Function]}
                  shards={Array []}
                  sideCar={
                    Object {
                      "assignMedium": [Function],
                      "assignSyncMedium": [Function],
                      "options": Object {
                        "async": true,
                        "ssr": false,
                      },
                      "read": [Function],
                      "useMedium": [Function],
                    }
                  }
                >
                  <SideCar
                    autoFocus={true}
                    crossFrame={true}
                    disabled={false}
                    id={Object {}}
                    observed={
                      <div
                        data-focus-lock-disabled="false"
                      >
                        <div
                          class="euiFlyout euiFlyout--medium euiFlyout--paddingLarge"
                          role="dialog"
                          tabindex="-1"
                        >
                          <button
                            aria-label="Close this dialog"
                            class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                            data-test-subj="euiFlyoutCloseButton"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                              focusable="false"
                              height="16"
                              role="img"
                              viewBox="0 0 16 16"
                              width="16"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                              />
                            </svg>
                          </button>
                          <div
                            class="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
                            id="availableIntegrationsArea"
                            role="main"
                          >
                            <div
                              class="euiSpacer euiSpacer--l"
                            />
                            <div
                              class="euiSpacer euiSpacer--xxl"
                            />
                            <div
                              class="euiText euiText--medium"
                            >
                              <div
                                class="euiTextAlign euiTextAlign--center"
                              >
                                <h2>
                                  No Integrations Available
                                </h2>
                              </div>
                            </div>
                            <div
                              class="euiSpacer euiSpacer--m"
                            />
                          </div>
                        </div>
                      </div>
                    }
                    onActivation={[Function]}
                    onDeactivation={[Function]}
                    persistentFocus={false}
                    returnFocus={[Function]}
                    shards={Array []}
                    sideCar={
                      Object {
                        "assignMedium": [Function],
                        "assignSyncMedium": [Function],
                        "options": Object {
                          "async": true,
                          "ssr": false,
                        },
                        "read": [Function],
                        "useMedium": [Function],
                      }
                    }
                  >
                    <SideEffect(FocusWatcher)
                      autoFocus={true}
                      crossFrame={true}
                      disabled={false}
                      id={Object {}}
                      observed={
                        <div
                          data-focus-lock-disabled="false"
                        >
                          <div
                            class="euiFlyout euiFlyout--medium euiFlyout--paddingLarge"
                            role="dialog"
                            tabindex="-1"
                          >
                            <button
                              aria-label="Close this dialog"
                              class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                              data-test-subj="euiFlyoutCloseButton"
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                focusable="false"
                                height="16"
                                role="img"
                                viewBox="0 0 16 16"
                                width="16"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                />
                              </svg>
                            </button>
                            <div
                              class="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
                              id="availableIntegrationsArea"
                              role="main"
                            >
                              <div
                                class="euiSpacer euiSpacer--l"
                              />
                              <div
                                class="euiSpacer euiSpacer--xxl"
                              />
                              <div
                                class="euiText euiText--medium"
                              >
                                <div
                                  class="euiTextAlign euiTextAlign--center"
                                >
                                  <h2>
                                    No Integrations Available
                                  </h2>
                                </div>
                              </div>
                              <div
                                class="euiSpacer euiSpacer--m"
                              />
                            </div>
                          </div>
                        </div>
                      }
                      onActivation={[Function]}
                      onDeactivation={[Function]}
                      persistentFocus={false}
                      returnFocus={[Function]}
                      shards={Array []}
                    >
                      <FocusWatcher
                        autoFocus={true}
                        crossFrame={true}
                        disabled={false}
                        id={Object {}}
                        observed={
                          <div
                            data-focus-lock-disabled="false"
                          >
                            <div
                              class="euiFlyout euiFlyout--medium euiFlyout--paddingLarge"
                              role="dialog"
                              tabindex="-1"
                            >
                              <button
                                aria-label="Close this dialog"
                                class="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                                data-test-subj="euiFlyoutCloseButton"
                                type="button"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                  focusable="false"
                                  height="16"
                                  role="img"
                                  viewBox="0 0 16 16"
                                  width="16"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                  />
                                </svg>
                              </button>
                              <div
                                class="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
                                id="availableIntegrationsArea"
                                role="main"
                              >
                                <div
                                  class="euiSpacer euiSpacer--l"
                                />
                                <div
                                  class="euiSpacer euiSpacer--xxl"
                                />
                                <div
                                  class="euiText euiText--medium"
                                >
                                  <div
                                    class="euiTextAlign euiTextAlign--center"
                                  >
                                    <h2>
                                      No Integrations Available
                                    </h2>
                                  </div>
                                </div>
                                <div
                                  class="euiSpacer euiSpacer--m"
                                />
                              </div>
                            </div>
                          </div>
                        }
                        onActivation={[Function]}
                        onDeactivation={[Function]}
                        persistentFocus={false}
                        returnFocus={[Function]}
                        shards={Array []}
                      />
                    </SideEffect(FocusWatcher)>
                  </SideCar>
                </RequireSideCar>
                <ForwardRef
                  data-focus-lock-disabled={false}
                  enabled={false}
                  inert={false}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseDown={[Function]}
                  onTouchStart={[Function]}
                  removeScrollBar={true}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-lock-disabled={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onMouseDown={[Function]}
                    onScrollCapture={[Function]}
                    onTouchMoveCapture={[Function]}
                    onTouchStart={[Function]}
                    onWheelCapture={[Function]}
                  >
                    <EuiOutsideClickDetector
                      isDisabled={true}
                      onOutsideClick={[Function]}
                    >
                      <div
                        className="euiFlyout euiFlyout--medium euiFlyout--paddingLarge"
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        role="dialog"
                        tabIndex={-1}
                      >
                        <EuiI18n
                          default="Close this dialog"
                          token="euiFlyout.closeAriaLabel"
                        >
                          <EuiButtonIcon
                            aria-label="Close this dialog"
                            className="euiFlyout__closeButton euiFlyout__closeButton--inside"
                            color="text"
                            data-test-subj="euiFlyoutCloseButton"
                            display="empty"
                            iconType="cross"
                            onClick={[Function]}
                          >
                            <button
                              aria-label="Close this dialog"
                              className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall euiFlyout__closeButton euiFlyout__closeButton--inside"
                              data-test-subj="euiFlyoutCloseButton"
                              disabled={false}
                              onClick={[Function]}
                              type="button"
                            >
                              <EuiIcon
                                aria-hidden="true"
                                className="euiButtonIcon__icon"
                                color="inherit"
                                size="m"
                                type="cross"
                              >
                                <EuiIconBeaker
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                  focusable="false"
                                  role="img"
                                  style={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                    focusable="false"
                                    height={16}
                                    role="img"
                                    style={null}
                                    viewBox="0 0 16 16"
                                    width={16}
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                    />
                                  </svg>
                                </EuiIconBeaker>
                              </EuiIcon>
                            </button>
                          </EuiButtonIcon>
                        </EuiI18n>
                        <AvailableIntegrationsTable
                          data={
                            Object {
                              "hits": Array [],
                            }
                          }
                          isCardView={true}
                          loading={false}
                          setInstallingIntegration={[Function]}
                        >
                          <EuiPageContent
                            id="availableIntegrationsArea"
                          >
                            <EuiPanel
                              className="euiPageContent"
                              id="availableIntegrationsArea"
                              paddingSize="l"
                              role="main"
                            >
                              <div
                                className="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
                                id="availableIntegrationsArea"
                                role="main"
                              >
                                <EuiSpacer>
                                  <div
                                    className="euiSpacer euiSpacer--l"
                                  />
                                </EuiSpacer>
                                <EuiSpacer
                                  size="xxl"
                                >
                                  <div
                                    className="euiSpacer euiSpacer--xxl"
                                  />
                                </EuiSpacer>
                                <EuiText
                                  textAlign="center"
                                >
                                  <div
                                    className="euiText euiText--medium"
                                  >
                                    <EuiTextAlign
                                      textAlign="center"
                                    >
                                      <div
                                        className="euiTextAlign euiTextAlign--center"
                                      >
                                        <h2>
                                          No Integrations Available
                                        </h2>
                                      </div>
                                    </EuiTextAlign>
                                  </div>
                                </EuiText>
                                <EuiSpacer
                                  size="m"
                                >
                                  <div
                                    className="euiSpacer euiSpacer--m"
                                  />
                                </EuiSpacer>
                              </div>
                            </EuiPanel>
                          </EuiPageContent>
                        </AvailableIntegrationsTable>
                      </div>
                    </EuiOutsideClickDetector>
                  </div>
                </ForwardRef>
                <div
                  data-focus-guard={true}
                  style={
                    Object {
                      "height": "0px",
                      "left": "1px",
                      "overflow": "hidden",
                      "padding": 0,
                      "position": "fixed",
                      "top": "1px",
                      "width": "1px",
                    }
                  }
                  tabIndex={0}
                />
              </ForwardRef(FocusLockUI)>
              <RequireSideCar
                noIsolation={true}
                onClickOutside={[Function]}
                setLockProps={[Function]}
                sideCar={
                  Object {
                    "assignMedium": [Function],
                    "assignSyncMedium": [Function],
                    "options": Object {
                      "async": true,
                      "ssr": false,
                    },
                    "read": [Function],
                    "useMedium": [Function],
                  }
                }
              >
                <SideCar
                  noIsolation={true}
                  onClickOutside={[Function]}
                  setLockProps={[Function]}
                  sideCar={
                    Object {
                      "assignMedium": [Function],
                      "assignSyncMedium": [Function],
                      "options": Object {
                        "async": true,
                        "ssr": false,
                      },
                      "read": [Function],
                      "useMedium": [Function],
                    }
                  }
                >
                  <Effect
                    noIsolation={true}
                    onClickOutside={[Function]}
                    setLockProps={[Function]}
                  >
                    <Component>
                      <Sheet
                        styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                      />
                    </Component>
                  </Effect>
                </SideCar>
              </RequireSideCar>
            </ForwardRef>
          </ForwardRef>
        </EuiFocusTrap>
      </Portal>
    </EuiOverlayMask>
  </EuiFlyout>
</InstallIntegrationFlyout>
`;
