// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssociatedObjectsTab Component renders correctly with associated objects 1`] = `
<AssociatedObjectsTab
  cacheLoadingHooks={
    Object {
      "accelerationsLoadStatus": "initial",
      "databasesLoadStatus": "initial",
      "startLoadingAccelerations": [MockFunction],
      "startLoadingDatabases": [MockFunction],
      "startLoadingTables": [MockFunction],
      "tablesLoadStatus": "initial",
    }
  }
  datasource={
    Object {
      "allowedRoles": Array [
        "admin",
      ],
      "connector": "S3GLUE",
      "description": "",
      "name": "mock_data_source",
      "properties": Object {
        "glue.indexstore.opensearch.region": "",
        "glue.indexstore.opensearch.uri": "",
      },
    }
  }
  selectedDatabase="mock_database_1"
  setSelectedDatabase={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
        Array [
          [Function],
        ],
        Array [
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
  <AccelerationsRecommendationCallout>
    <EuiCallOut
      iconType="iInCircle"
      title="Accelerations recommended for tables. Setup acceleration or configure integrations"
    >
      <div
        className="euiCallOut euiCallOut--primary"
      >
        <div
          className="euiCallOutHeader"
        >
          <EuiIcon
            aria-hidden="true"
            className="euiCallOutHeader__icon"
            color="inherit"
            size="m"
            type="iInCircle"
          >
            <EuiIconIInCircle
              aria-hidden={true}
              className="euiIcon euiIcon--medium euiIcon--inherit euiCallOutHeader__icon"
              focusable="false"
              role="img"
              style={null}
            >
              <svg
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon--inherit euiCallOutHeader__icon"
                focusable="false"
                height={16}
                role="img"
                style={null}
                viewBox="0 0 16 16"
                width={16}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7.5 11.508 7.468 8H6.25V7h2.401l.03 3.508H9.8v1H7.5Zm-.25-6.202a.83.83 0 0 1 .207-.577c.137-.153.334-.229.59-.229.256 0 .454.076.594.23.14.152.209.345.209.576 0 .228-.07.417-.21.568-.14.15-.337.226-.593.226-.256 0-.453-.075-.59-.226a.81.81 0 0 1-.207-.568ZM8 13A5 5 0 1 0 8 3a5 5 0 0 0 0 10Zm0 1A6 6 0 1 1 8 2a6 6 0 0 1 0 12Z"
                  fillRule="evenodd"
                />
              </svg>
            </EuiIconIInCircle>
          </EuiIcon>
          <span
            className="euiCallOutHeader__title"
          >
            Accelerations recommended for tables. Setup acceleration or configure integrations
          </span>
        </div>
      </div>
    </EuiCallOut>
  </AccelerationsRecommendationCallout>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
  <EuiPanel>
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
    >
      <AssociatedObjectsHeader>
        <EuiFlexGroup
          alignItems="center"
          direction="row"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiText
                  size="m"
                >
                  <div
                    className="euiText euiText--medium"
                  >
                    <h2
                      className="panel-title"
                    >
                      Associated objects
                    </h2>
                    Manage objects associated with this data sources.
                  </div>
                </EuiText>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <LastUpdatedText>
                  <EuiText
                    color="subdued"
                    size="xs"
                    textAlign="right"
                  >
                    <div
                      className="euiText euiText--extraSmall"
                    >
                      <EuiTextAlign
                        textAlign="right"
                      >
                        <div
                          className="euiTextAlign euiTextAlign--right"
                        >
                          <EuiTextColor
                            color="subdued"
                            component="div"
                          >
                            <div
                              className="euiTextColor euiTextColor--subdued"
                            >
                              Last updated at:
                            </div>
                          </EuiTextColor>
                        </div>
                      </EuiTextAlign>
                    </div>
                  </EuiText>
                  <EuiText
                    color="subdued"
                    size="xs"
                    textAlign="right"
                  >
                    <div
                      className="euiText euiText--extraSmall"
                    >
                      <EuiTextAlign
                        textAlign="right"
                      >
                        <div
                          className="euiTextAlign euiTextAlign--right"
                        >
                          <EuiTextColor
                            color="subdued"
                            component="div"
                          >
                            <div
                              className="euiTextColor euiTextColor--subdued"
                            >
                              3/14/2024, 12:00:00 PM
                            </div>
                          </EuiTextColor>
                        </div>
                      </EuiTextAlign>
                    </div>
                  </EuiText>
                </LastUpdatedText>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <AssociatedObjectsRefreshButton
                  isLoading={false}
                  onClick={[Function]}
                >
                  <EuiButton
                    iconType="refresh"
                    isDisabled={false}
                    isLoading={false}
                    onClick={[Function]}
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      iconType="refresh"
                      isDisabled={false}
                      isLoading={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconSide="left"
                          iconType="refresh"
                          isLoading={false}
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <EuiIcon
                              className="euiButtonContent__icon"
                              color="inherit"
                              size="m"
                              type="refresh"
                            >
                              <EuiIconRefresh
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon--inherit euiButtonContent__icon"
                                focusable="false"
                                role="img"
                                style={null}
                              >
                                <svg
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiButtonContent__icon"
                                  focusable="false"
                                  height={16}
                                  role="img"
                                  style={null}
                                  viewBox="0 0 16 16"
                                  width={16}
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M11.228 2.942a.5.5 0 1 1-.538.842A5 5 0 1 0 13 8a.5.5 0 1 1 1 0 6 6 0 1 1-2.772-5.058ZM14 1.5v3A1.5 1.5 0 0 1 12.5 6h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 1 1 1 0Z"
                                  />
                                </svg>
                              </EuiIconRefresh>
                            </EuiIcon>
                            <span
                              className="euiButton__text"
                            >
                              Refresh
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </AssociatedObjectsRefreshButton>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <CreateAccelerationFlyoutButton
                  dataSourceName="mock_data_source"
                  renderCreateAccelerationFlyout={[MockFunction]}
                >
                  <EuiButton
                    fill={true}
                    onClick={[Function]}
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      fill={true}
                      isDisabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary euiButton--fill"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text"
                            >
                              Create acceleration
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </CreateAccelerationFlyoutButton>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </AssociatedObjectsHeader>
      <EuiHorizontalRule>
        <hr
          className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginLarge"
        />
      </EuiHorizontalRule>
      <EuiSpacer
        size="xs"
      >
        <div
          className="euiSpacer euiSpacer--xs"
        />
      </EuiSpacer>
      <EuiFlexGroup
        direction="row"
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <EuiFlexItem
            className="database-selector"
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero database-selector"
            >
              <EuiSelectable
                isPreFiltered={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "checked": "on",
                      "label": "mock_database_1",
                    },
                  ]
                }
                searchProps={
                  Object {
                    "placeholder": "Search for databases",
                  }
                }
                searchable={true}
                singleSelection="always"
              >
                <div
                  className="euiSelectable"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                >
                  <EuiI18n
                    default="Filter options"
                    token="euiSelectable.placeholderName"
                  >
                    <EuiSelectableSearch
                      aria-activedescendant=""
                      aria-label="Filter options"
                      defaultValue=""
                      isPreFiltered={false}
                      key="listSearch"
                      listId="random_html_id"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "checked": "on",
                            "label": "mock_database_1",
                          },
                        ]
                      }
                      placeholder="Search for databases"
                    >
                      <EuiFieldSearch
                        aria-activedescendant=""
                        aria-autocomplete="list"
                        aria-controls="random_html_id"
                        aria-expanded={true}
                        aria-haspopup="listbox"
                        aria-label="Filter options"
                        aria-owns="random_html_id"
                        autoComplete="off"
                        className="euiSelectableSearch"
                        compressed={false}
                        defaultValue=""
                        fullWidth={true}
                        incremental={true}
                        isClearable={true}
                        isLoading={false}
                        onSearch={[Function]}
                        placeholder="Search for databases"
                        role="combobox"
                      >
                        <EuiFormControlLayout
                          compressed={false}
                          fullWidth={true}
                          icon="search"
                          isLoading={false}
                        >
                          <div
                            className="euiFormControlLayout euiFormControlLayout--fullWidth"
                          >
                            <div
                              className="euiFormControlLayout__childrenWrapper"
                            >
                              <EuiValidatableControl>
                                <input
                                  aria-activedescendant=""
                                  aria-autocomplete="list"
                                  aria-controls="random_html_id"
                                  aria-expanded={true}
                                  aria-haspopup="listbox"
                                  aria-label="Filter options"
                                  aria-owns="random_html_id"
                                  autoComplete="off"
                                  className="euiFieldSearch euiFieldSearch--fullWidth euiSelectableSearch"
                                  defaultValue=""
                                  onKeyUp={[Function]}
                                  placeholder="Search for databases"
                                  role="combobox"
                                  type="search"
                                />
                              </EuiValidatableControl>
                              <EuiFormControlLayoutIcons
                                compressed={false}
                                icon="search"
                                isLoading={false}
                              >
                                <div
                                  className="euiFormControlLayoutIcons"
                                >
                                  <EuiFormControlLayoutCustomIcon
                                    size="m"
                                    type="search"
                                  >
                                    <span
                                      className="euiFormControlLayoutCustomIcon"
                                    >
                                      <EuiIcon
                                        aria-hidden="true"
                                        className="euiFormControlLayoutCustomIcon__icon"
                                        size="m"
                                        type="search"
                                      >
                                        <EuiIconBeaker
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          role="img"
                                          style={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                            focusable="false"
                                            height={16}
                                            role="img"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width={16}
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                            />
                                          </svg>
                                        </EuiIconBeaker>
                                      </EuiIcon>
                                    </span>
                                  </EuiFormControlLayoutCustomIcon>
                                </div>
                              </EuiFormControlLayoutIcons>
                            </div>
                          </div>
                        </EuiFormControlLayout>
                      </EuiFieldSearch>
                    </EuiSelectableSearch>
                  </EuiI18n>
                  <EuiI18n
                    default="Filter options"
                    token="euiSelectable.placeholderName"
                  >
                    <EuiSelectableList
                      aria-label="Filter options"
                      key="list"
                      listId="random_html_id"
                      makeOptionId={[Function]}
                      onOptionClick={[Function]}
                      options={
                        Array [
                          Object {
                            "checked": "on",
                            "label": "mock_database_1",
                          },
                        ]
                      }
                      rowHeight={32}
                      searchValue=""
                      searchable={true}
                      setActiveOptionIndex={[Function]}
                      singleSelection="always"
                      visibleOptions={
                        Array [
                          Object {
                            "checked": "on",
                            "label": "mock_database_1",
                          },
                        ]
                      }
                    >
                      <div
                        className="euiSelectableList"
                      >
                        <AutoSizer
                          disableHeight={true}
                          disableWidth={false}
                          onResize={[Function]}
                          style={Object {}}
                        >
                          <div
                            style={
                              Object {
                                "overflow": "visible",
                                "width": 0,
                              }
                            }
                          />
                        </AutoSizer>
                      </div>
                    </EuiSelectableList>
                  </EuiI18n>
                </div>
              </EuiSelectable>
            </div>
          </EuiFlexItem>
          <EuiFlexItem>
            <div
              className="euiFlexItem"
            >
              <AssociatedObjectsTable
                associatedObjects={
                  Array [
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_table_1",
                      "name": "mock_table_1",
                      "type": "table",
                    },
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_table_2",
                      "name": "mock_table_2",
                      "type": "table",
                    },
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_table_3",
                      "name": "mock_table_3",
                      "type": "table",
                    },
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_table_4",
                      "name": "mock_table_4",
                      "type": "table",
                    },
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_table_5",
                      "name": "mock_table_5",
                      "type": "table",
                    },
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_acceleration_1",
                      "name": "mock_acceleration_1",
                      "type": "skipping",
                    },
                    Object {
                      "accelerations": Array [],
                      "columns": undefined,
                      "database": "mock_database_1",
                      "datasource": "mock_data_source",
                      "id": "mock_acceleration_2",
                      "name": "mock_acceleration_2",
                      "type": "materialized",
                    },
                  ]
                }
                cachedAccelerations={
                  Array [
                    Object {
                      "autoRefresh": true,
                      "database": "mock_database_1",
                      "flintIndexName": "mock_acceleration_1",
                      "indexName": "mock_acceleration_1",
                      "status": "",
                      "table": "",
                      "type": "skipping",
                    },
                    Object {
                      "autoRefresh": true,
                      "database": "mock_database_1",
                      "flintIndexName": "mock_acceleration_2",
                      "indexName": "mock_acceleration_2",
                      "status": "",
                      "table": "",
                      "type": "materialized",
                    },
                  ]
                }
                datasourceName="mock_data_source"
              >
                <EuiInMemoryTable
                  columns={
                    Array [
                      Object {
                        "data-test-subj": "nameCell",
                        "field": "name",
                        "name": "Name",
                        "render": [Function],
                        "sortable": true,
                      },
                      Object {
                        "field": "type",
                        "name": "Type",
                        "render": [Function],
                        "sortable": true,
                      },
                      Object {
                        "field": "accelerations",
                        "name": "Accelerations",
                        "render": [Function],
                        "sortable": true,
                      },
                      Object {
                        "actions": Array [
                          Object {
                            "description": "Query in Observability Logs",
                            "icon": "discoverApp",
                            "name": "Discover",
                            "onClick": [Function],
                            "type": "icon",
                          },
                          Object {
                            "available": [Function],
                            "description": "Accelerate this object",
                            "icon": "bolt",
                            "name": "Accelerate",
                            "onClick": [Function],
                            "type": "icon",
                          },
                        ],
                        "name": "Actions",
                      },
                    ]
                  }
                  data-test-subj="associatedObjectsTable"
                  hasActions={true}
                  items={
                    Array [
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_table_1",
                        "name": "mock_table_1",
                        "type": "table",
                      },
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_table_2",
                        "name": "mock_table_2",
                        "type": "table",
                      },
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_table_3",
                        "name": "mock_table_3",
                        "type": "table",
                      },
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_table_4",
                        "name": "mock_table_4",
                        "type": "table",
                      },
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_table_5",
                        "name": "mock_table_5",
                        "type": "table",
                      },
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_acceleration_1",
                        "name": "mock_acceleration_1",
                        "type": "skipping",
                      },
                      Object {
                        "accelerations": Array [],
                        "columns": undefined,
                        "database": "mock_database_1",
                        "datasource": "mock_data_source",
                        "id": "mock_acceleration_2",
                        "name": "mock_acceleration_2",
                        "type": "materialized",
                      },
                    ]
                  }
                  pagination={
                    Object {
                      "initialPageSize": 10,
                      "pageSizeOptions": Array [
                        10,
                        25,
                        50,
                      ],
                    }
                  }
                  responsive={true}
                  search={
                    Object {
                      "box": Object {
                        "incremental": true,
                        "placeholder": "Search for objects",
                        "schema": Object {
                          "fields": Object {
                            "database": Object {
                              "type": "string",
                            },
                            "name": Object {
                              "type": "string",
                            },
                          },
                        },
                      },
                      "filters": Array [
                        Object {
                          "cache": 60000,
                          "field": "accelerations",
                          "multiSelect": true,
                          "name": "Accelerations",
                          "options": Array [
                            Object {
                              "text": "mock_acceleration_1",
                              "value": "mock_acceleration_1",
                            },
                            Object {
                              "text": "mock_acceleration_2",
                              "value": "mock_acceleration_2",
                            },
                          ],
                          "type": "field_value_selection",
                        },
                      ],
                      "onChange": [Function],
                    }
                  }
                  sorting={
                    Object {
                      "sort": Object {
                        "direction": "asc",
                        "field": "name",
                      },
                    }
                  }
                  tableLayout="auto"
                >
                  <div>
                    <EuiSearchBar
                      box={
                        Object {
                          "incremental": true,
                          "placeholder": "Search for objects",
                          "schema": Object {
                            "fields": Object {
                              "database": Object {
                                "type": "string",
                              },
                              "name": Object {
                                "type": "string",
                              },
                            },
                          },
                        }
                      }
                      filters={
                        Array [
                          Object {
                            "cache": 60000,
                            "field": "accelerations",
                            "multiSelect": true,
                            "name": "Accelerations",
                            "options": Array [
                              Object {
                                "text": "mock_acceleration_1",
                                "value": "mock_acceleration_1",
                              },
                              Object {
                                "text": "mock_acceleration_2",
                                "value": "mock_acceleration_2",
                              },
                            ],
                            "type": "field_value_selection",
                          },
                        ]
                      }
                      onChange={[Function]}
                    >
                      <EuiFlexGroup
                        alignItems="center"
                        gutterSize="m"
                        wrap={true}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                        >
                          <EuiFlexItem
                            className="euiSearchBar__searchHolder"
                            grow={true}
                          >
                            <div
                              className="euiFlexItem euiSearchBar__searchHolder"
                            >
                              <EuiSearchBox
                                incremental={true}
                                isInvalid={false}
                                onSearch={[Function]}
                                placeholder="Search for objects"
                                query=""
                              >
                                <EuiFieldSearch
                                  aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                  compressed={false}
                                  defaultValue=""
                                  fullWidth={true}
                                  incremental={true}
                                  inputRef={[Function]}
                                  isClearable={true}
                                  isInvalid={false}
                                  isLoading={false}
                                  onSearch={[Function]}
                                  placeholder="Search for objects"
                                >
                                  <EuiFormControlLayout
                                    compressed={false}
                                    fullWidth={true}
                                    icon="search"
                                    isLoading={false}
                                  >
                                    <div
                                      className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                    >
                                      <div
                                        className="euiFormControlLayout__childrenWrapper"
                                      >
                                        <EuiValidatableControl
                                          isInvalid={false}
                                        >
                                          <input
                                            aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                            className="euiFieldSearch euiFieldSearch--fullWidth"
                                            defaultValue=""
                                            onKeyUp={[Function]}
                                            placeholder="Search for objects"
                                            type="search"
                                          />
                                        </EuiValidatableControl>
                                        <EuiFormControlLayoutIcons
                                          compressed={false}
                                          icon="search"
                                          isLoading={false}
                                        >
                                          <div
                                            className="euiFormControlLayoutIcons"
                                          >
                                            <EuiFormControlLayoutCustomIcon
                                              size="m"
                                              type="search"
                                            >
                                              <span
                                                className="euiFormControlLayoutCustomIcon"
                                              >
                                                <EuiIcon
                                                  aria-hidden="true"
                                                  className="euiFormControlLayoutCustomIcon__icon"
                                                  size="m"
                                                  type="search"
                                                >
                                                  <EuiIconBeaker
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                    focusable="false"
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                      focusable="false"
                                                      height={16}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                      />
                                                    </svg>
                                                  </EuiIconBeaker>
                                                </EuiIcon>
                                              </span>
                                            </EuiFormControlLayoutCustomIcon>
                                          </div>
                                        </EuiFormControlLayoutIcons>
                                      </div>
                                    </div>
                                  </EuiFormControlLayout>
                                </EuiFieldSearch>
                              </EuiSearchBox>
                            </div>
                          </EuiFlexItem>
                          <EuiFlexItem
                            className="euiSearchBar__filtersHolder"
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero euiSearchBar__filtersHolder"
                            >
                              <EuiSearchFilters
                                filters={
                                  Array [
                                    Object {
                                      "cache": 60000,
                                      "field": "accelerations",
                                      "multiSelect": true,
                                      "name": "Accelerations",
                                      "options": Array [
                                        Object {
                                          "text": "mock_acceleration_1",
                                          "value": "mock_acceleration_1",
                                        },
                                        Object {
                                          "text": "mock_acceleration_2",
                                          "value": "mock_acceleration_2",
                                        },
                                      ],
                                      "type": "field_value_selection",
                                    },
                                  ]
                                }
                                onChange={[Function]}
                                query={
                                  Query {
                                    "ast": _AST {
                                      "_clauses": Array [],
                                      "_indexedClauses": Object {
                                        "field": Object {},
                                        "group": Array [],
                                        "is": Object {},
                                        "term": Array [],
                                      },
                                    },
                                    "syntax": Object {
                                      "parse": [Function],
                                      "print": [Function],
                                      "printClause": [Function],
                                    },
                                    "text": "",
                                  }
                                }
                              >
                                <EuiFilterGroup>
                                  <div
                                    className="euiFilterGroup"
                                  >
                                    <FieldValueSelectionFilter
                                      config={
                                        Object {
                                          "cache": 60000,
                                          "field": "accelerations",
                                          "multiSelect": true,
                                          "name": "Accelerations",
                                          "options": Array [
                                            Object {
                                              "text": "mock_acceleration_1",
                                              "value": "mock_acceleration_1",
                                            },
                                            Object {
                                              "text": "mock_acceleration_2",
                                              "value": "mock_acceleration_2",
                                            },
                                          ],
                                          "type": "field_value_selection",
                                        }
                                      }
                                      index={0}
                                      onChange={[Function]}
                                      query={
                                        Query {
                                          "ast": _AST {
                                            "_clauses": Array [],
                                            "_indexedClauses": Object {
                                              "field": Object {},
                                              "group": Array [],
                                              "is": Object {},
                                              "term": Array [],
                                            },
                                          },
                                          "syntax": Object {
                                            "parse": [Function],
                                            "print": [Function],
                                            "printClause": [Function],
                                          },
                                          "text": "",
                                        }
                                      }
                                    >
                                      <EuiPopover
                                        anchorPosition="downCenter"
                                        button={
                                          <EuiFilterButton
                                            grow={true}
                                            hasActiveFilters={false}
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                          >
                                            Accelerations
                                          </EuiFilterButton>
                                        }
                                        closePopover={[Function]}
                                        display="inlineBlock"
                                        hasArrow={true}
                                        id="field_value_selection_0"
                                        isOpen={false}
                                        ownFocus={true}
                                        panelClassName="euiFilterGroup__popoverPanel"
                                        panelPaddingSize="none"
                                      >
                                        <div
                                          className="euiPopover euiPopover--anchorDownCenter"
                                          id="field_value_selection_0"
                                        >
                                          <div
                                            className="euiPopover__anchor"
                                          >
                                            <EuiFilterButton
                                              grow={true}
                                              hasActiveFilters={false}
                                              iconSide="right"
                                              iconType="arrowDown"
                                              onClick={[Function]}
                                            >
                                              <EuiButtonEmpty
                                                className="euiFilterButton euiFilterButton--hasIcon"
                                                color="text"
                                                iconSide="right"
                                                iconType="arrowDown"
                                                onClick={[Function]}
                                                textProps={
                                                  Object {
                                                    "className": "",
                                                  }
                                                }
                                                type="button"
                                              >
                                                <button
                                                  className="euiButtonEmpty euiButtonEmpty--text euiFilterButton euiFilterButton--hasIcon"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <EuiButtonContent
                                                    className="euiButtonEmpty__content"
                                                    iconSide="right"
                                                    iconSize="m"
                                                    iconType="arrowDown"
                                                    textProps={
                                                      Object {
                                                        "className": "euiButtonEmpty__text",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                    >
                                                      <EuiIcon
                                                        className="euiButtonContent__icon"
                                                        color="inherit"
                                                        size="m"
                                                        type="arrowDown"
                                                      >
                                                        <EuiIconBeaker
                                                          aria-hidden={true}
                                                          className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                          focusable="false"
                                                          role="img"
                                                          style={null}
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                            focusable="false"
                                                            height={16}
                                                            role="img"
                                                            style={null}
                                                            viewBox="0 0 16 16"
                                                            width={16}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                            />
                                                          </svg>
                                                        </EuiIconBeaker>
                                                      </EuiIcon>
                                                      <span
                                                        className="euiButtonEmpty__text"
                                                      >
                                                        <span
                                                          className="euiFilterButton__textShift"
                                                          data-text="Accelerations"
                                                          title="Accelerations"
                                                        >
                                                          Accelerations
                                                        </span>
                                                      </span>
                                                    </span>
                                                  </EuiButtonContent>
                                                </button>
                                              </EuiButtonEmpty>
                                            </EuiFilterButton>
                                          </div>
                                        </div>
                                      </EuiPopover>
                                    </FieldValueSelectionFilter>
                                  </div>
                                </EuiFilterGroup>
                              </EuiSearchFilters>
                            </div>
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                    </EuiSearchBar>
                    <EuiSpacer
                      size="l"
                    >
                      <div
                        className="euiSpacer euiSpacer--l"
                      />
                    </EuiSpacer>
                    <EuiBasicTable
                      columns={
                        Array [
                          Object {
                            "data-test-subj": "nameCell",
                            "field": "name",
                            "name": "Name",
                            "render": [Function],
                            "sortable": true,
                          },
                          Object {
                            "field": "type",
                            "name": "Type",
                            "render": [Function],
                            "sortable": true,
                          },
                          Object {
                            "field": "accelerations",
                            "name": "Accelerations",
                            "render": [Function],
                            "sortable": true,
                          },
                          Object {
                            "actions": Array [
                              Object {
                                "description": "Query in Observability Logs",
                                "icon": "discoverApp",
                                "name": "Discover",
                                "onClick": [Function],
                                "type": "icon",
                              },
                              Object {
                                "available": [Function],
                                "description": "Accelerate this object",
                                "icon": "bolt",
                                "name": "Accelerate",
                                "onClick": [Function],
                                "type": "icon",
                              },
                            ],
                            "name": "Actions",
                          },
                        ]
                      }
                      data-test-subj="associatedObjectsTable"
                      hasActions={true}
                      items={
                        Array [
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_acceleration_1",
                            "name": "mock_acceleration_1",
                            "type": "skipping",
                          },
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_acceleration_2",
                            "name": "mock_acceleration_2",
                            "type": "materialized",
                          },
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_table_1",
                            "name": "mock_table_1",
                            "type": "table",
                          },
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_table_2",
                            "name": "mock_table_2",
                            "type": "table",
                          },
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_table_3",
                            "name": "mock_table_3",
                            "type": "table",
                          },
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_table_4",
                            "name": "mock_table_4",
                            "type": "table",
                          },
                          Object {
                            "accelerations": Array [],
                            "columns": undefined,
                            "database": "mock_database_1",
                            "datasource": "mock_data_source",
                            "id": "mock_table_5",
                            "name": "mock_table_5",
                            "type": "table",
                          },
                        ]
                      }
                      noItemsMessage="No items found"
                      onChange={[Function]}
                      pagination={
                        Object {
                          "hidePerPageOptions": undefined,
                          "pageIndex": 0,
                          "pageSize": 10,
                          "pageSizeOptions": Array [
                            10,
                            25,
                            50,
                          ],
                          "totalItemCount": 7,
                        }
                      }
                      responsive={true}
                      sorting={
                        Object {
                          "allowNeutralSort": true,
                          "sort": Object {
                            "direction": "asc",
                            "field": "Name",
                          },
                        }
                      }
                      tableLayout="auto"
                    >
                      <div
                        className="euiBasicTable"
                        data-test-subj="associatedObjectsTable"
                      >
                        <div>
                          <EuiTableHeaderMobile>
                            <div
                              className="euiTableHeaderMobile"
                            >
                              <EuiFlexGroup
                                alignItems="baseline"
                                justifyContent="spaceBetween"
                                responsive={false}
                              >
                                <div
                                  className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                                >
                                  <EuiFlexItem
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero"
                                    />
                                  </EuiFlexItem>
                                  <EuiFlexItem
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero"
                                    >
                                      <EuiTableSortMobile
                                        items={
                                          Array [
                                            Object {
                                              "isSortAscending": true,
                                              "isSorted": true,
                                              "key": "_data_s_name_0",
                                              "name": "Name",
                                              "onSort": [Function],
                                            },
                                            Object {
                                              "isSortAscending": undefined,
                                              "isSorted": false,
                                              "key": "_data_s_type_1",
                                              "name": "Type",
                                              "onSort": [Function],
                                            },
                                            Object {
                                              "isSortAscending": undefined,
                                              "isSorted": false,
                                              "key": "_data_s_accelerations_2",
                                              "name": "Accelerations",
                                              "onSort": [Function],
                                            },
                                          ]
                                        }
                                      >
                                        <div
                                          className="euiTableSortMobile"
                                        >
                                          <EuiPopover
                                            anchorPosition="downRight"
                                            button={
                                              <EuiButtonEmpty
                                                flush="right"
                                                iconSide="right"
                                                iconType="arrowDown"
                                                onClick={[Function]}
                                                size="xs"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                />
                                              </EuiButtonEmpty>
                                            }
                                            closePopover={[Function]}
                                            display="inlineBlock"
                                            hasArrow={true}
                                            isOpen={false}
                                            ownFocus={true}
                                            panelPaddingSize="none"
                                          >
                                            <div
                                              className="euiPopover euiPopover--anchorDownRight"
                                            >
                                              <div
                                                className="euiPopover__anchor"
                                              >
                                                <EuiButtonEmpty
                                                  flush="right"
                                                  iconSide="right"
                                                  iconType="arrowDown"
                                                  onClick={[Function]}
                                                  size="xs"
                                                >
                                                  <button
                                                    className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                                    disabled={false}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <EuiButtonContent
                                                      className="euiButtonEmpty__content"
                                                      iconSide="right"
                                                      iconSize="s"
                                                      iconType="arrowDown"
                                                      textProps={
                                                        Object {
                                                          "className": "euiButtonEmpty__text",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                      >
                                                        <EuiIcon
                                                          className="euiButtonContent__icon"
                                                          color="inherit"
                                                          size="s"
                                                          type="arrowDown"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                        <span
                                                          className="euiButtonEmpty__text"
                                                        >
                                                          <EuiI18n
                                                            default="Sorting"
                                                            token="euiTableSortMobile.sorting"
                                                          >
                                                            Sorting
                                                          </EuiI18n>
                                                        </span>
                                                      </span>
                                                    </EuiButtonContent>
                                                  </button>
                                                </EuiButtonEmpty>
                                              </div>
                                            </div>
                                          </EuiPopover>
                                        </div>
                                      </EuiTableSortMobile>
                                    </div>
                                  </EuiFlexItem>
                                </div>
                              </EuiFlexGroup>
                            </div>
                          </EuiTableHeaderMobile>
                          <EuiTable
                            id="random_html_id"
                            responsive={true}
                            tableLayout="auto"
                          >
                            <table
                              className="euiTable euiTable--responsive euiTable--auto"
                              id="random_html_id"
                              tabIndex={-1}
                            >
                              <EuiScreenReaderOnly>
                                <caption
                                  className="euiScreenReaderOnly euiTableCaption"
                                >
                                  <EuiDelayRender
                                    delay={500}
                                  />
                                </caption>
                              </EuiScreenReaderOnly>
                              <EuiTableHeader>
                                <thead>
                                  <tr>
                                    <EuiTableHeaderCell
                                      align="left"
                                      data-test-subj="tableHeaderCell_name_0"
                                      isSortAscending={true}
                                      isSorted={true}
                                      key="_data_h_name_0"
                                      onSort={[Function]}
                                    >
                                      <th
                                        aria-live="polite"
                                        aria-sort="ascending"
                                        className="euiTableHeaderCell"
                                        data-test-subj="tableHeaderCell_name_0"
                                        role="columnheader"
                                        scope="col"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <button
                                          className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                          data-test-subj="tableHeaderSortButton"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <CellContents
                                            className="euiTableCellContent"
                                            isSortAscending={true}
                                            isSorted={true}
                                            showSortMsg={true}
                                          >
                                            <span
                                              className="euiTableCellContent"
                                            >
                                              <EuiInnerText>
                                                <EuiI18n
                                                  default="{innerText}; {description}"
                                                  token="euiTableHeaderCell.titleTextWithDesc"
                                                  values={
                                                    Object {
                                                      "description": undefined,
                                                      "innerText": "Name",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiTableCellContent__text"
                                                    title="Name"
                                                  >
                                                    Name
                                                  </span>
                                                </EuiI18n>
                                              </EuiInnerText>
                                              <EuiIcon
                                                className="euiTableSortIcon"
                                                size="m"
                                                type="sortUp"
                                              >
                                                <EuiIconBeaker
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiTableSortIcon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiTableSortIcon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                    />
                                                  </svg>
                                                </EuiIconBeaker>
                                              </EuiIcon>
                                            </span>
                                          </CellContents>
                                        </button>
                                      </th>
                                    </EuiTableHeaderCell>
                                    <EuiTableHeaderCell
                                      align="left"
                                      data-test-subj="tableHeaderCell_type_1"
                                      isSorted={false}
                                      key="_data_h_type_1"
                                      onSort={[Function]}
                                    >
                                      <th
                                        aria-live="polite"
                                        aria-sort="none"
                                        className="euiTableHeaderCell"
                                        data-test-subj="tableHeaderCell_type_1"
                                        role="columnheader"
                                        scope="col"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <button
                                          className="euiTableHeaderButton"
                                          data-test-subj="tableHeaderSortButton"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <CellContents
                                            className="euiTableCellContent"
                                            isSorted={false}
                                            showSortMsg={true}
                                          >
                                            <span
                                              className="euiTableCellContent"
                                            >
                                              <EuiInnerText>
                                                <EuiI18n
                                                  default="{innerText}; {description}"
                                                  token="euiTableHeaderCell.titleTextWithDesc"
                                                  values={
                                                    Object {
                                                      "description": undefined,
                                                      "innerText": "Type",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiTableCellContent__text"
                                                    title="Type"
                                                  >
                                                    Type
                                                  </span>
                                                </EuiI18n>
                                              </EuiInnerText>
                                            </span>
                                          </CellContents>
                                        </button>
                                      </th>
                                    </EuiTableHeaderCell>
                                    <EuiTableHeaderCell
                                      align="left"
                                      data-test-subj="tableHeaderCell_accelerations_2"
                                      isSorted={false}
                                      key="_data_h_accelerations_2"
                                      onSort={[Function]}
                                    >
                                      <th
                                        aria-live="polite"
                                        aria-sort="none"
                                        className="euiTableHeaderCell"
                                        data-test-subj="tableHeaderCell_accelerations_2"
                                        role="columnheader"
                                        scope="col"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <button
                                          className="euiTableHeaderButton"
                                          data-test-subj="tableHeaderSortButton"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <CellContents
                                            className="euiTableCellContent"
                                            isSorted={false}
                                            showSortMsg={true}
                                          >
                                            <span
                                              className="euiTableCellContent"
                                            >
                                              <EuiInnerText>
                                                <EuiI18n
                                                  default="{innerText}; {description}"
                                                  token="euiTableHeaderCell.titleTextWithDesc"
                                                  values={
                                                    Object {
                                                      "description": undefined,
                                                      "innerText": "Accelerations",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiTableCellContent__text"
                                                    title="Accelerations"
                                                  >
                                                    Accelerations
                                                  </span>
                                                </EuiI18n>
                                              </EuiInnerText>
                                            </span>
                                          </CellContents>
                                        </button>
                                      </th>
                                    </EuiTableHeaderCell>
                                    <EuiTableHeaderCell
                                      align="right"
                                      key="_actions_h_3"
                                    >
                                      <th
                                        className="euiTableHeaderCell"
                                        role="columnheader"
                                        scope="col"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <CellContents
                                          className="euiTableCellContent euiTableCellContent--alignRight"
                                          showSortMsg={false}
                                        >
                                          <span
                                            className="euiTableCellContent euiTableCellContent--alignRight"
                                          >
                                            <EuiInnerText>
                                              <EuiI18n
                                                default="{innerText}; {description}"
                                                token="euiTableHeaderCell.titleTextWithDesc"
                                                values={
                                                  Object {
                                                    "description": undefined,
                                                    "innerText": "Actions",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiTableCellContent__text"
                                                  title="Actions"
                                                >
                                                  Actions
                                                </span>
                                              </EuiI18n>
                                            </EuiInnerText>
                                          </span>
                                        </CellContents>
                                      </th>
                                    </EuiTableHeaderCell>
                                  </tr>
                                </thead>
                              </EuiTableHeader>
                              <EuiTableBody
                                bodyRef={[Function]}
                              >
                                <tbody>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_0_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_acceleration_1
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_0_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Skipping Index
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_0_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_0_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_acceleration_1",
                                                  "name": "mock_acceleration_1",
                                                  "type": "skipping",
                                                }
                                              }
                                              itemId={0}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_acceleration_1",
                                                    "name": "mock_acceleration_1",
                                                    "type": "skipping",
                                                  }
                                                }
                                                key="item_action_0_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_1_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_acceleration_2
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_1_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Materialized View
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_1_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_1_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_acceleration_2",
                                                  "name": "mock_acceleration_2",
                                                  "type": "materialized",
                                                }
                                              }
                                              itemId={1}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_acceleration_2",
                                                    "name": "mock_acceleration_2",
                                                    "type": "materialized",
                                                  }
                                                }
                                                key="item_action_1_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_2_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_table_1
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_2_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Table
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_2_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_2_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_table_1",
                                                  "name": "mock_table_1",
                                                  "type": "table",
                                                }
                                              }
                                              itemId={2}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_1",
                                                    "name": "mock_table_1",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_2_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_1",
                                                    "name": "mock_table_1",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_2_1"
                                              >
                                                <EuiToolTip
                                                  content="Accelerate this object"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="bolt"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="bolt"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Accelerate
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_3_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_table_2
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_3_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Table
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_3_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_3_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_table_2",
                                                  "name": "mock_table_2",
                                                  "type": "table",
                                                }
                                              }
                                              itemId={3}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_2",
                                                    "name": "mock_table_2",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_3_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_2",
                                                    "name": "mock_table_2",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_3_1"
                                              >
                                                <EuiToolTip
                                                  content="Accelerate this object"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="bolt"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="bolt"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Accelerate
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_4_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_table_3
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_4_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Table
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_4_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_4_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_table_3",
                                                  "name": "mock_table_3",
                                                  "type": "table",
                                                }
                                              }
                                              itemId={4}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_3",
                                                    "name": "mock_table_3",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_4_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_3",
                                                    "name": "mock_table_3",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_4_1"
                                              >
                                                <EuiToolTip
                                                  content="Accelerate this object"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="bolt"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="bolt"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Accelerate
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_5_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_table_4
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_5_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Table
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_5_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_5_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_table_4",
                                                  "name": "mock_table_4",
                                                  "type": "table",
                                                }
                                              }
                                              itemId={5}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_4",
                                                    "name": "mock_table_4",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_5_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_4",
                                                    "name": "mock_table_4",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_5_1"
                                              >
                                                <EuiToolTip
                                                  content="Accelerate this object"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="bolt"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="bolt"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Accelerate
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                  <EuiTableRow
                                    hasActions={true}
                                    isSelected={false}
                                  >
                                    <tr
                                      className="euiTableRow euiTableRow-hasActions"
                                    >
                                      <EuiTableRowCell
                                        align="left"
                                        data-test-subj="nameCell"
                                        key="_data_column_name_6_0"
                                        mobileOptions={
                                          Object {
                                            "header": "Name",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          data-test-subj="nameCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Name
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            <EuiLink
                                              className=""
                                              key=".0"
                                              onClick={[Function]}
                                            >
                                              <button
                                                className="euiLink euiLink--primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                mock_table_5
                                              </button>
                                            </EuiLink>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_type_6_1"
                                        mobileOptions={
                                          Object {
                                            "header": "Type",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Type
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            Table
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="left"
                                        key="_data_column_accelerations_6_2"
                                        mobileOptions={
                                          Object {
                                            "header": "Accelerations",
                                            "render": undefined,
                                          }
                                        }
                                        setScopeRow={false}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                          >
                                            Accelerations
                                          </div>
                                          <div
                                            className="euiTableCellContent euiTableCellContent--overflowingContent"
                                          >
                                            -
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                      <EuiTableRowCell
                                        align="right"
                                        hasActions={true}
                                        key="record_actions_6_3"
                                        showOnHover={true}
                                        textOnly={false}
                                      >
                                        <td
                                          className="euiTableRowCell euiTableRowCell--hasActions"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiTableCellContent euiTableCellContent--alignRight euiTableCellContent--showOnHover euiTableCellContent--overflowingContent"
                                          >
                                            <ExpandedItemActions
                                              actionEnabled={[Function]}
                                              actions={
                                                Array [
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  },
                                                ]
                                              }
                                              className="euiTableCellContent__hoverItem"
                                              item={
                                                Object {
                                                  "accelerations": Array [],
                                                  "columns": undefined,
                                                  "database": "mock_database_1",
                                                  "datasource": "mock_data_source",
                                                  "id": "mock_table_5",
                                                  "name": "mock_table_5",
                                                  "type": "table",
                                                }
                                              }
                                              itemId={6}
                                              key=".0"
                                            >
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "description": "Query in Observability Logs",
                                                    "icon": "discoverApp",
                                                    "name": "Discover",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_5",
                                                    "name": "mock_table_5",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_6_0"
                                              >
                                                <EuiToolTip
                                                  content="Query in Observability Logs"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="discoverApp"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="discoverApp"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Discover
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                              <DefaultItemAction
                                                action={
                                                  Object {
                                                    "available": [Function],
                                                    "description": "Accelerate this object",
                                                    "icon": "bolt",
                                                    "name": "Accelerate",
                                                    "onClick": [Function],
                                                    "type": "icon",
                                                  }
                                                }
                                                className="euiTableCellContent__hoverItem"
                                                enabled={true}
                                                item={
                                                  Object {
                                                    "accelerations": Array [],
                                                    "columns": undefined,
                                                    "database": "mock_database_1",
                                                    "datasource": "mock_data_source",
                                                    "id": "mock_table_5",
                                                    "name": "mock_table_5",
                                                    "type": "table",
                                                  }
                                                }
                                                key="item_action_6_1"
                                              >
                                                <EuiToolTip
                                                  content="Accelerate this object"
                                                  delay="long"
                                                  position="top"
                                                >
                                                  <span
                                                    className="euiToolTipAnchor"
                                                    onKeyUp={[Function]}
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <EuiButtonIcon
                                                      aria-labelledby="random_html_id"
                                                      className="euiTableCellContent__hoverItem"
                                                      color="primary"
                                                      iconType="bolt"
                                                      isDisabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <button
                                                        aria-labelledby="random_html_id"
                                                        className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall euiTableCellContent__hoverItem"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiButtonIcon__icon"
                                                          color="inherit"
                                                          size="m"
                                                          type="bolt"
                                                        >
                                                          <EuiIconBeaker
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                              />
                                                            </svg>
                                                          </EuiIconBeaker>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiButtonIcon>
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="random_html_id"
                                                      >
                                                        Accelerate
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                  </span>
                                                </EuiToolTip>
                                              </DefaultItemAction>
                                            </ExpandedItemActions>
                                          </div>
                                        </td>
                                      </EuiTableRowCell>
                                    </tr>
                                  </EuiTableRow>
                                </tbody>
                              </EuiTableBody>
                            </table>
                          </EuiTable>
                        </div>
                        <PaginationBar
                          aria-controls="random_html_id"
                          onPageChange={[Function]}
                          onPageSizeChange={[Function]}
                          pagination={
                            Object {
                              "hidePerPageOptions": undefined,
                              "pageIndex": 0,
                              "pageSize": 10,
                              "pageSizeOptions": Array [
                                10,
                                25,
                                50,
                              ],
                              "totalItemCount": 7,
                            }
                          }
                        >
                          <div>
                            <EuiSpacer
                              size="m"
                            >
                              <div
                                className="euiSpacer euiSpacer--m"
                              />
                            </EuiSpacer>
                            <EuiTablePagination
                              activePage={0}
                              aria-controls="random_html_id"
                              itemsPerPage={10}
                              itemsPerPageOptions={
                                Array [
                                  10,
                                  25,
                                  50,
                                ]
                              }
                              onChangeItemsPerPage={[Function]}
                              onChangePage={[Function]}
                              pageCount={1}
                            >
                              <EuiFlexGroup
                                alignItems="center"
                                justifyContent="spaceBetween"
                                responsive={false}
                              >
                                <div
                                  className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                                >
                                  <EuiFlexItem
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero"
                                    >
                                      <EuiPopover
                                        anchorPosition="upRight"
                                        button={
                                          <EuiButtonEmpty
                                            color="text"
                                            data-test-subj="tablePaginationPopoverButton"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            size="xs"
                                          >
                                            <EuiI18n
                                              default="Rows per page"
                                              token="euiTablePagination.rowsPerPage"
                                            />
                                            : 
                                            10
                                          </EuiButtonEmpty>
                                        }
                                        closePopover={[Function]}
                                        display="inlineBlock"
                                        hasArrow={true}
                                        isOpen={false}
                                        ownFocus={true}
                                        panelPaddingSize="none"
                                      >
                                        <div
                                          className="euiPopover euiPopover--anchorUpRight"
                                        >
                                          <div
                                            className="euiPopover__anchor"
                                          >
                                            <EuiButtonEmpty
                                              color="text"
                                              data-test-subj="tablePaginationPopoverButton"
                                              iconSide="right"
                                              iconType="arrowDown"
                                              onClick={[Function]}
                                              size="xs"
                                            >
                                              <button
                                                className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--xSmall"
                                                data-test-subj="tablePaginationPopoverButton"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiButtonContent
                                                  className="euiButtonEmpty__content"
                                                  iconSide="right"
                                                  iconSize="s"
                                                  iconType="arrowDown"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButtonEmpty__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                  >
                                                    <EuiIcon
                                                      className="euiButtonContent__icon"
                                                      color="inherit"
                                                      size="s"
                                                      type="arrowDown"
                                                    >
                                                      <EuiIconBeaker
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                        focusable="false"
                                                        role="img"
                                                        style={null}
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                          focusable="false"
                                                          height={16}
                                                          role="img"
                                                          style={null}
                                                          viewBox="0 0 16 16"
                                                          width={16}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                          />
                                                        </svg>
                                                      </EuiIconBeaker>
                                                    </EuiIcon>
                                                    <span
                                                      className="euiButtonEmpty__text"
                                                    >
                                                      <EuiI18n
                                                        default="Rows per page"
                                                        token="euiTablePagination.rowsPerPage"
                                                      >
                                                        Rows per page
                                                      </EuiI18n>
                                                      : 
                                                      10
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </button>
                                            </EuiButtonEmpty>
                                          </div>
                                        </div>
                                      </EuiPopover>
                                    </div>
                                  </EuiFlexItem>
                                  <EuiFlexItem
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero"
                                    >
                                      <EuiPagination
                                        activePage={0}
                                        aria-controls="random_html_id"
                                        onPageClick={[Function]}
                                        pageCount={1}
                                      >
                                        <nav
                                          className="euiPagination"
                                        >
                                          <EuiI18n
                                            default="Previous page, {page}"
                                            token="euiPagination.previousPage"
                                            values={
                                              Object {
                                                "page": 0,
                                              }
                                            }
                                          >
                                            <EuiI18n
                                              default="Previous page"
                                              token="euiPagination.disabledPreviousPage"
                                            >
                                              <EuiButtonIcon
                                                aria-label="Previous page"
                                                color="text"
                                                data-test-subj="pagination-button-previous"
                                                disabled={true}
                                                iconType="arrowLeft"
                                                onClick={[Function]}
                                              >
                                                <button
                                                  aria-label="Previous page"
                                                  className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                                  data-test-subj="pagination-button-previous"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <EuiIcon
                                                    aria-hidden="true"
                                                    className="euiButtonIcon__icon"
                                                    color="inherit"
                                                    size="m"
                                                    type="arrowLeft"
                                                  >
                                                    <EuiIconBeaker
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                      focusable="false"
                                                      role="img"
                                                      style={null}
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                        focusable="false"
                                                        height={16}
                                                        role="img"
                                                        style={null}
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                        />
                                                      </svg>
                                                    </EuiIconBeaker>
                                                  </EuiIcon>
                                                </button>
                                              </EuiButtonIcon>
                                            </EuiI18n>
                                          </EuiI18n>
                                          <ul
                                            className="euiPagination__list"
                                          >
                                            <PaginationButton
                                              key="0"
                                              pageIndex={0}
                                            >
                                              <li
                                                className="euiPagination__item"
                                              >
                                                <EuiPaginationButton
                                                  aria-controls="random_html_id"
                                                  hideOnMobile={true}
                                                  isActive={true}
                                                  onClick={[Function]}
                                                  pageIndex={0}
                                                  totalPages={1}
                                                >
                                                  <EuiI18n
                                                    default="Page {page} of {totalPages}"
                                                    token="euiPaginationButton.longPageString"
                                                    values={
                                                      Object {
                                                        "page": 1,
                                                        "totalPages": 1,
                                                      }
                                                    }
                                                  >
                                                    <EuiI18n
                                                      default="Page {page}"
                                                      token="euiPaginationButton.shortPageString"
                                                      values={
                                                        Object {
                                                          "page": 1,
                                                        }
                                                      }
                                                    >
                                                      <EuiButtonEmpty
                                                        aria-controls="random_html_id"
                                                        aria-current={true}
                                                        aria-label="Page 1 of 1"
                                                        className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                                        color="text"
                                                        data-test-subj="pagination-button-0"
                                                        href="#random_html_id"
                                                        isDisabled={true}
                                                        onClick={[Function]}
                                                        size="s"
                                                      >
                                                        <button
                                                          aria-controls="random_html_id"
                                                          aria-current={true}
                                                          aria-label="Page 1 of 1"
                                                          className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                                          data-test-subj="pagination-button-0"
                                                          disabled={true}
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <EuiButtonContent
                                                            className="euiButtonEmpty__content"
                                                            iconSide="left"
                                                            iconSize="m"
                                                            textProps={
                                                              Object {
                                                                "className": "euiButtonEmpty__text",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiButtonContent euiButtonEmpty__content"
                                                            >
                                                              <span
                                                                className="euiButtonEmpty__text"
                                                              >
                                                                1
                                                              </span>
                                                            </span>
                                                          </EuiButtonContent>
                                                        </button>
                                                      </EuiButtonEmpty>
                                                    </EuiI18n>
                                                  </EuiI18n>
                                                </EuiPaginationButton>
                                              </li>
                                            </PaginationButton>
                                          </ul>
                                          <EuiI18n
                                            default="Next page, {page}"
                                            token="euiPagination.nextPage"
                                            values={
                                              Object {
                                                "page": 2,
                                              }
                                            }
                                          >
                                            <EuiI18n
                                              default="Next page"
                                              token="euiPagination.disabledNextPage"
                                            >
                                              <EuiButtonIcon
                                                aria-label="Next page"
                                                color="text"
                                                data-test-subj="pagination-button-next"
                                                disabled={true}
                                                iconType="arrowRight"
                                                onClick={[Function]}
                                              >
                                                <button
                                                  aria-label="Next page"
                                                  className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                                  data-test-subj="pagination-button-next"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <EuiIcon
                                                    aria-hidden="true"
                                                    className="euiButtonIcon__icon"
                                                    color="inherit"
                                                    size="m"
                                                    type="arrowRight"
                                                  >
                                                    <EuiIconBeaker
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                      focusable="false"
                                                      role="img"
                                                      style={null}
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                                        focusable="false"
                                                        height={16}
                                                        role="img"
                                                        style={null}
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                        />
                                                      </svg>
                                                    </EuiIconBeaker>
                                                  </EuiIcon>
                                                </button>
                                              </EuiButtonIcon>
                                            </EuiI18n>
                                          </EuiI18n>
                                        </nav>
                                      </EuiPagination>
                                    </div>
                                  </EuiFlexItem>
                                </div>
                              </EuiFlexGroup>
                            </EuiTablePagination>
                          </div>
                        </PaginationBar>
                      </div>
                    </EuiBasicTable>
                  </div>
                </EuiInMemoryTable>
              </AssociatedObjectsTable>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
    </div>
  </EuiPanel>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
</AssociatedObjectsTab>
`;

exports[`AssociatedObjectsTab Component renders tab with no databases or objects 1`] = `
<AssociatedObjectsTab
  cacheLoadingHooks={
    Object {
      "accelerationsLoadStatus": "initial",
      "databasesLoadStatus": "initial",
      "startLoadingAccelerations": [MockFunction],
      "startLoadingDatabases": [MockFunction],
      "startLoadingTables": [MockFunction],
      "tablesLoadStatus": "initial",
    }
  }
  datasource={
    Object {
      "allowedRoles": Array [
        "admin",
      ],
      "connector": "S3GLUE",
      "description": "",
      "name": "mock_data_source",
      "properties": Object {
        "glue.indexstore.opensearch.region": "",
        "glue.indexstore.opensearch.uri": "",
      },
    }
  }
  selectedDatabase=""
  setSelectedDatabase={
    [MockFunction] {
      "calls": Array [
        Array [
          [Function],
        ],
        Array [
          [Function],
        ],
        Array [
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
  <AccelerationsRecommendationCallout>
    <EuiCallOut
      iconType="iInCircle"
      title="Accelerations recommended for tables. Setup acceleration or configure integrations"
    >
      <div
        className="euiCallOut euiCallOut--primary"
      >
        <div
          className="euiCallOutHeader"
        >
          <EuiIcon
            aria-hidden="true"
            className="euiCallOutHeader__icon"
            color="inherit"
            size="m"
            type="iInCircle"
          >
            <EuiIconBeaker
              aria-hidden={true}
              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiCallOutHeader__icon"
              focusable="false"
              role="img"
              style={null}
            >
              <svg
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiCallOutHeader__icon"
                focusable="false"
                height={16}
                role="img"
                style={null}
                viewBox="0 0 16 16"
                width={16}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                />
              </svg>
            </EuiIconBeaker>
          </EuiIcon>
          <span
            className="euiCallOutHeader__title"
          >
            Accelerations recommended for tables. Setup acceleration or configure integrations
          </span>
        </div>
      </div>
    </EuiCallOut>
  </AccelerationsRecommendationCallout>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
  <EuiPanel>
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
    >
      <AssociatedObjectsHeader>
        <EuiFlexGroup
          alignItems="center"
          direction="row"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiText
                  size="m"
                >
                  <div
                    className="euiText euiText--medium"
                  >
                    <h2
                      className="panel-title"
                    >
                      Associated objects
                    </h2>
                    Manage objects associated with this data sources.
                  </div>
                </EuiText>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <LastUpdatedText>
                  <EuiText
                    color="subdued"
                    size="xs"
                    textAlign="right"
                  >
                    <div
                      className="euiText euiText--extraSmall"
                    >
                      <EuiTextAlign
                        textAlign="right"
                      >
                        <div
                          className="euiTextAlign euiTextAlign--right"
                        >
                          <EuiTextColor
                            color="subdued"
                            component="div"
                          >
                            <div
                              className="euiTextColor euiTextColor--subdued"
                            >
                              Last updated at:
                            </div>
                          </EuiTextColor>
                        </div>
                      </EuiTextAlign>
                    </div>
                  </EuiText>
                  <EuiText
                    color="subdued"
                    size="xs"
                    textAlign="right"
                  >
                    <div
                      className="euiText euiText--extraSmall"
                    >
                      <EuiTextAlign
                        textAlign="right"
                      >
                        <div
                          className="euiTextAlign euiTextAlign--right"
                        >
                          <EuiTextColor
                            color="subdued"
                            component="div"
                          >
                            <div
                              className="euiTextColor euiTextColor--subdued"
                            >
                              3/14/2024, 12:00:00 PM
                            </div>
                          </EuiTextColor>
                        </div>
                      </EuiTextAlign>
                    </div>
                  </EuiText>
                </LastUpdatedText>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <AssociatedObjectsRefreshButton
                  isLoading={false}
                  onClick={[Function]}
                >
                  <EuiButton
                    iconType="refresh"
                    isDisabled={false}
                    isLoading={false}
                    onClick={[Function]}
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      iconType="refresh"
                      isDisabled={false}
                      isLoading={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconSide="left"
                          iconType="refresh"
                          isLoading={false}
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <EuiIcon
                              className="euiButtonContent__icon"
                              color="inherit"
                              size="m"
                              type="refresh"
                            >
                              <EuiIconBeaker
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                focusable="false"
                                role="img"
                                style={null}
                              >
                                <svg
                                  aria-hidden={true}
                                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                  focusable="false"
                                  height={16}
                                  role="img"
                                  style={null}
                                  viewBox="0 0 16 16"
                                  width={16}
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                  />
                                </svg>
                              </EuiIconBeaker>
                            </EuiIcon>
                            <span
                              className="euiButton__text"
                            >
                              Refresh
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </AssociatedObjectsRefreshButton>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <CreateAccelerationFlyoutButton
                  dataSourceName="mock_data_source"
                  renderCreateAccelerationFlyout={[MockFunction]}
                >
                  <EuiButton
                    fill={true}
                    onClick={[Function]}
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      fill={true}
                      isDisabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary euiButton--fill"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text"
                            >
                              Create acceleration
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </CreateAccelerationFlyoutButton>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </AssociatedObjectsHeader>
      <EuiHorizontalRule>
        <hr
          className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginLarge"
        />
      </EuiHorizontalRule>
      <AssociatedObjectsTabEmpty
        cacheType="databases"
      >
        <EuiEmptyPrompt
          actions={
            <EuiButton
              iconSide="right"
              iconType="popout"
              onClick={[Function]}
            >
              Query Workbench
            </EuiButton>
          }
          body={
            <React.Fragment>
              <EuiText>
                <h4>
                  You have no databases in your data source
                </h4>
                <p>
                  Add databases and tables to your data source or use Query Workbench
                </p>
              </EuiText>
            </React.Fragment>
          }
        >
          <div
            className="euiEmptyPrompt"
          >
            <EuiTextColor
              color="subdued"
            >
              <span
                className="euiTextColor euiTextColor--subdued"
              >
                <EuiText>
                  <div
                    className="euiText euiText--medium"
                  >
                    <EuiText>
                      <div
                        className="euiText euiText--medium"
                      >
                        <h4>
                          You have no databases in your data source
                        </h4>
                        <p>
                          Add databases and tables to your data source or use Query Workbench
                        </p>
                      </div>
                    </EuiText>
                  </div>
                </EuiText>
              </span>
            </EuiTextColor>
            <EuiSpacer
              size="l"
            >
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <EuiButton
              iconSide="right"
              iconType="popout"
              onClick={[Function]}
            >
              <EuiButtonDisplay
                baseClassName="euiButton"
                disabled={false}
                element="button"
                iconSide="right"
                iconType="popout"
                isDisabled={false}
                onClick={[Function]}
                type="button"
              >
                <button
                  className="euiButton euiButton--primary"
                  disabled={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "minWidth": undefined,
                    }
                  }
                  type="button"
                >
                  <EuiButtonContent
                    className="euiButton__content"
                    iconSide="right"
                    iconType="popout"
                    textProps={
                      Object {
                        "className": "euiButton__text",
                      }
                    }
                  >
                    <span
                      className="euiButtonContent euiButtonContent--iconRight euiButton__content"
                    >
                      <EuiIcon
                        className="euiButtonContent__icon"
                        color="inherit"
                        size="m"
                        type="popout"
                      >
                        <EuiIconBeaker
                          aria-hidden={true}
                          className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                          focusable="false"
                          role="img"
                          style={null}
                        >
                          <svg
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                            focusable="false"
                            height={16}
                            role="img"
                            style={null}
                            viewBox="0 0 16 16"
                            width={16}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                            />
                          </svg>
                        </EuiIconBeaker>
                      </EuiIcon>
                      <span
                        className="euiButton__text"
                      >
                        Query Workbench
                      </span>
                    </span>
                  </EuiButtonContent>
                </button>
              </EuiButtonDisplay>
            </EuiButton>
          </div>
        </EuiEmptyPrompt>
      </AssociatedObjectsTabEmpty>
    </div>
  </EuiPanel>
  <EuiSpacer>
    <div
      className="euiSpacer euiSpacer--l"
    />
  </EuiSpacer>
</AssociatedObjectsTab>
`;
