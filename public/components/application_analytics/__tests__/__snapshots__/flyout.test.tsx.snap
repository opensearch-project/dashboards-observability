// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Trace Detail Render Flyout component render trace detail 1`] = `
<TraceDetailRender
  http={[MockFunction]}
  mode="jaeger"
  openSpanFlyout={[Function]}
  traceId="mockTrace"
>
  <EuiText
    size="m"
  >
    <div
      className="euiText euiText--medium"
    >
      <span
        className="panel-title"
      >
        Overview
      </span>
    </div>
  </EuiText>
  <EuiSpacer
    size="s"
  >
    <div
      className="euiSpacer euiSpacer--s"
    />
  </EuiSpacer>
  <div
    key="list-item-Trace ID"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="Trace IDDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b>
                mockTrace
              </b>
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Trace ID
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="Trace IDDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Trace ID
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b>
                  mockTrace
                </b>
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Trace group name"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="Trace group nameDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b>
                -
              </b>
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Trace group name
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="Trace group nameDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Trace group name
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b>
                  -
                </b>
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Latency"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="LatencyDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b />
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Latency
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="LatencyDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Latency
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b />
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Last updated"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="Last updatedDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b />
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Last updated
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="Last updatedDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Last updated
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b />
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Errors"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="ErrorsDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b>
                <React.Fragment />
              </b>
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Errors
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="ErrorsDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Errors
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b />
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <EuiSpacer
    size="xs"
  >
    <div
      className="euiSpacer euiSpacer--xs"
    />
  </EuiSpacer>
  <EuiHorizontalRule
    margin="s"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginSmall"
    />
  </EuiHorizontalRule>
  <ServiceBreakdownPanel
    data={Array []}
  >
    <EuiPanel>
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
      >
        <PanelTitle
          data-test-subj="time-spent-by-service-panel"
          title="Time spent by service"
        >
          <EuiText
            size="m"
          >
            <div
              className="euiText euiText--medium"
            >
              <span
                className="panel-title"
              >
                Time spent by service
              </span>
            </div>
          </EuiText>
        </PanelTitle>
        <EuiHorizontalRule
          margin="m"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
          />
        </EuiHorizontalRule>
        <EuiFlexGroup
          alignItems="center"
          gutterSize="m"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={3}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrow3"
              />
            </EuiFlexItem>
            <EuiFlexItem
              grow={3}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrow3"
              />
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiSpacer>
          <div
            className="euiSpacer euiSpacer--l"
          />
        </EuiSpacer>
      </div>
    </EuiPanel>
  </ServiceBreakdownPanel>
  <EuiSpacer
    size="xs"
  >
    <div
      className="euiSpacer euiSpacer--xs"
    />
  </EuiSpacer>
  <EuiHorizontalRule
    margin="s"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginSmall"
    />
  </EuiHorizontalRule>
  <SpanDetailPanel
    colorMap={Object {}}
    http={[MockFunction]}
    isApplicationFlyout={true}
    mode="jaeger"
    openSpanFlyout={[Function]}
    page="app"
    traceId="mockTrace"
  >
    <EuiPanel
      data-test-subj="span-gantt-chart-panel"
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        data-test-subj="span-gantt-chart-panel"
      >
        <EuiFlexGroup
          direction="column"
          gutterSize="m"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--directionColumn euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup>
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem>
                      <div
                        className="euiFlexItem"
                      >
                        <PanelTitle
                          title="Spans"
                          totalItems={0}
                        >
                          <EuiText
                            size="m"
                          >
                            <div
                              className="euiText euiText--medium"
                            >
                              <span
                                className="panel-title"
                              >
                                Spans
                              </span>
                              <span
                                className="panel-title-count"
                              >
                                 (0)
                              </span>
                            </div>
                          </EuiText>
                        </PanelTitle>
                      </div>
                    </EuiFlexItem>
                    <EuiFlexItem
                      grow={false}
                    >
                      <div
                        className="euiFlexItem euiFlexItem--flexGrowZero"
                      >
                        <EuiFlexGroup
                          alignItems="center"
                          gutterSize="s"
                          justifyContent="flexEnd"
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                          >
                            <EuiFlexItem
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiSmallButton
                                  isDisabled={true}
                                  onClick={[Function]}
                                >
                                  <EuiButton
                                    isDisabled={true}
                                    onClick={[Function]}
                                    size="s"
                                  >
                                    <EuiButtonDisplay
                                      baseClassName="euiButton"
                                      disabled={true}
                                      element="button"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                      type="button"
                                    >
                                      <button
                                        className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                                        disabled={true}
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "minWidth": undefined,
                                          }
                                        }
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButton__content"
                                          iconGap="m"
                                          iconSide="left"
                                          textProps={
                                            Object {
                                              "className": "euiButton__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButton__content"
                                          >
                                            <span
                                              className="euiButton__text"
                                            >
                                              Reset zoom
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonDisplay>
                                  </EuiButton>
                                </EuiSmallButton>
                              </div>
                            </EuiFlexItem>
                            <EuiFlexItem
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiButtonGroup
                                  idSelected="timeline"
                                  legend="Select view of spans"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "id": "timeline",
                                        "label": "Timeline",
                                      },
                                      Object {
                                        "id": "span_list",
                                        "label": "Span list",
                                      },
                                      Object {
                                        "id": "hierarchy_span_list",
                                        "label": "Tree view",
                                      },
                                    ]
                                  }
                                >
                                  <fieldset
                                    className="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                                    disabled={false}
                                  >
                                    <EuiScreenReaderOnly>
                                      <legend
                                        className="euiScreenReaderOnly"
                                      >
                                        Select view of spans
                                      </legend>
                                    </EuiScreenReaderOnly>
                                    <div
                                      className="euiButtonGroup__buttons"
                                    >
                                      <EuiButtonGroupButton
                                        color="text"
                                        element="label"
                                        id="timeline"
                                        isDisabled={false}
                                        isIconOnly={false}
                                        isSelected={true}
                                        key="0"
                                        label="Timeline"
                                        name="random_html_id"
                                        onChange={[Function]}
                                        size="s"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButtonGroupButton"
                                          className="euiButtonGroupButton-isSelected"
                                          color="text"
                                          element="label"
                                          fill={true}
                                          htmlFor="random_html_id"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiButtonGroupButton__textShift",
                                              "data-text": "Timeline",
                                              "ref": [Function],
                                              "title": "Timeline",
                                            }
                                          }
                                        >
                                          <label
                                            className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected"
                                            disabled={false}
                                            htmlFor="random_html_id"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiButtonGroupButton__textShift",
                                                  "data-text": "Timeline",
                                                  "ref": [Function],
                                                  "title": "Timeline",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text euiButtonGroupButton__textShift"
                                                  data-text="Timeline"
                                                  title="Timeline"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="euiScreenReaderOnly"
                                                    data-test-subj="timeline"
                                                    disabled={false}
                                                    id="random_html_id"
                                                    name="random_html_id"
                                                    onChange={[Function]}
                                                    type="radio"
                                                  />
                                                  Timeline
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </label>
                                        </EuiButtonDisplay>
                                      </EuiButtonGroupButton>
                                      <EuiButtonGroupButton
                                        color="text"
                                        element="label"
                                        id="span_list"
                                        isDisabled={false}
                                        isIconOnly={false}
                                        isSelected={false}
                                        key="1"
                                        label="Span list"
                                        name="random_html_id"
                                        onChange={[Function]}
                                        size="s"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButtonGroupButton"
                                          className=""
                                          color="text"
                                          element="label"
                                          fill={false}
                                          htmlFor="random_html_id"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiButtonGroupButton__textShift",
                                              "data-text": "Span list",
                                              "ref": [Function],
                                              "title": "Span list",
                                            }
                                          }
                                        >
                                          <label
                                            className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                            disabled={false}
                                            htmlFor="random_html_id"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiButtonGroupButton__textShift",
                                                  "data-text": "Span list",
                                                  "ref": [Function],
                                                  "title": "Span list",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text euiButtonGroupButton__textShift"
                                                  data-text="Span list"
                                                  title="Span list"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="euiScreenReaderOnly"
                                                    data-test-subj="span_list"
                                                    disabled={false}
                                                    id="random_html_id"
                                                    name="random_html_id"
                                                    onChange={[Function]}
                                                    type="radio"
                                                  />
                                                  Span list
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </label>
                                        </EuiButtonDisplay>
                                      </EuiButtonGroupButton>
                                      <EuiButtonGroupButton
                                        color="text"
                                        element="label"
                                        id="hierarchy_span_list"
                                        isDisabled={false}
                                        isIconOnly={false}
                                        isSelected={false}
                                        key="2"
                                        label="Tree view"
                                        name="random_html_id"
                                        onChange={[Function]}
                                        size="s"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButtonGroupButton"
                                          className=""
                                          color="text"
                                          element="label"
                                          fill={false}
                                          htmlFor="random_html_id"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiButtonGroupButton__textShift",
                                              "data-text": "Tree view",
                                              "ref": [Function],
                                              "title": "Tree view",
                                            }
                                          }
                                        >
                                          <label
                                            className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                            disabled={false}
                                            htmlFor="random_html_id"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiButtonGroupButton__textShift",
                                                  "data-text": "Tree view",
                                                  "ref": [Function],
                                                  "title": "Tree view",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text euiButtonGroupButton__textShift"
                                                  data-text="Tree view"
                                                  title="Tree view"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="euiScreenReaderOnly"
                                                    data-test-subj="hierarchy_span_list"
                                                    disabled={false}
                                                    id="random_html_id"
                                                    name="random_html_id"
                                                    onChange={[Function]}
                                                    type="radio"
                                                  />
                                                  Tree view
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </label>
                                        </EuiButtonDisplay>
                                      </EuiButtonGroupButton>
                                    </div>
                                  </fieldset>
                                </EuiButtonGroup>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
            <EuiHorizontalRule
              margin="m"
            >
              <hr
                className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
              />
            </EuiHorizontalRule>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <Plt
                  data={Array []}
                  layout={
                    Object {
                      "dragmode": "select",
                      "height": 100,
                      "margin": Object {
                        "b": 30,
                        "l": 150,
                        "r": 5,
                        "t": 30,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "shapes": Array [
                        Object {
                          "editable": true,
                          "fillcolor": "rgba(128, 128, 128, 0.3)",
                          "line": Object {
                            "color": "rgba(255, 0, 0, 0.6)",
                            "width": 1,
                          },
                          "type": "rect",
                          "x0": 0,
                          "x1": 0,
                          "xref": "x",
                          "y0": 0,
                          "y1": 1,
                          "yref": "paper",
                        },
                      ],
                      "width": undefined,
                      "xaxis": Object {
                        "color": "#91989c",
                        "range": Array [
                          0,
                          0,
                        ],
                        "showline": true,
                        "side": "top",
                        "ticksuffix": " ms",
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "visible": false,
                      },
                    }
                  }
                  onRelayout={[Function]}
                  onSelectedHandler={[Function]}
                >
                  <PlotlyComponent
                    config={
                      Object {
                        "displayModeBar": false,
                      }
                    }
                    data={Array []}
                    debug={false}
                    divId="explorerPlotComponent"
                    layout={
                      Object {
                        "autosize": true,
                        "barmode": "stack",
                        "dragmode": "select",
                        "height": 100,
                        "hovermode": "closest",
                        "layout": Object {
                          "annotations": Array [
                            Object {
                              "showarrow": true,
                              "xanchor": "right",
                            },
                          ],
                        },
                        "legend": Object {
                          "orientation": "h",
                          "traceorder": "normal",
                        },
                        "margin": Object {
                          "b": 30,
                          "l": 150,
                          "r": 5,
                          "t": 30,
                        },
                        "paper_bgcolor": "rgba(0, 0, 0, 0)",
                        "plot_bgcolor": "rgba(0, 0, 0, 0)",
                        "shapes": Array [
                          Object {
                            "editable": true,
                            "fillcolor": "rgba(128, 128, 128, 0.3)",
                            "line": Object {
                              "color": "rgba(255, 0, 0, 0.6)",
                              "width": 1,
                            },
                            "type": "rect",
                            "x0": 0,
                            "x1": 0,
                            "xref": "x",
                            "y0": 0,
                            "y1": 1,
                            "yref": "paper",
                          },
                        ],
                        "showlegend": false,
                        "width": undefined,
                        "xaxis": Object {
                          "color": "#91989c",
                          "range": Array [
                            0,
                            0,
                          ],
                          "showline": true,
                          "side": "top",
                          "ticksuffix": " ms",
                        },
                        "yaxis": Object {
                          "fixedrange": true,
                          "visible": false,
                        },
                      }
                    }
                    onRelayout={[Function]}
                    onSelected={[Function]}
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                    useResizeHandler={true}
                  >
                    <div
                      id="explorerPlotComponent"
                      style={
                        Object {
                          "height": "100%",
                          "width": "100%",
                        }
                      }
                    />
                  </PlotlyComponent>
                </Plt>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              style={
                Object {
                  "maxHeight": 500,
                  "overflowY": "auto",
                }
              }
            >
              <div
                className="euiFlexItem"
                style={
                  Object {
                    "maxHeight": 500,
                    "overflowY": "auto",
                  }
                }
              >
                <Plt
                  data={Array []}
                  layout={
                    Object {
                      "height": 60,
                      "margin": Object {
                        "b": 30,
                        "l": 150,
                        "r": 5,
                        "t": 30,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "width": undefined,
                      "xaxis": Object {
                        "color": "#91989c",
                        "range": Array [
                          0,
                          0,
                        ],
                        "showline": true,
                        "side": "top",
                        "ticksuffix": " ms",
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "ticktext": Array [],
                        "tickvals": Array [],
                      },
                    }
                  }
                  onClickHandler={[Function]}
                  onHoverHandler={[Function]}
                  onRelayout={[Function]}
                  onUnhoverHandler={[Function]}
                >
                  <PlotlyComponent
                    config={
                      Object {
                        "displayModeBar": false,
                      }
                    }
                    data={Array []}
                    debug={false}
                    divId="explorerPlotComponent"
                    layout={
                      Object {
                        "autosize": true,
                        "barmode": "stack",
                        "height": 60,
                        "hovermode": "closest",
                        "layout": Object {
                          "annotations": Array [
                            Object {
                              "showarrow": true,
                              "xanchor": "right",
                            },
                          ],
                        },
                        "legend": Object {
                          "orientation": "h",
                          "traceorder": "normal",
                        },
                        "margin": Object {
                          "b": 30,
                          "l": 150,
                          "r": 5,
                          "t": 30,
                        },
                        "paper_bgcolor": "rgba(0, 0, 0, 0)",
                        "plot_bgcolor": "rgba(0, 0, 0, 0)",
                        "showlegend": false,
                        "width": undefined,
                        "xaxis": Object {
                          "color": "#91989c",
                          "range": Array [
                            0,
                            0,
                          ],
                          "showline": true,
                          "side": "top",
                          "ticksuffix": " ms",
                        },
                        "yaxis": Object {
                          "fixedrange": true,
                          "showgrid": false,
                          "ticktext": Array [],
                          "tickvals": Array [],
                        },
                      }
                    }
                    onClick={[Function]}
                    onHover={[Function]}
                    onRelayout={[Function]}
                    onUnhover={[Function]}
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                    useResizeHandler={true}
                  >
                    <div
                      id="explorerPlotComponent"
                      style={
                        Object {
                          "height": "100%",
                          "width": "100%",
                        }
                      }
                    />
                  </PlotlyComponent>
                </Plt>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </div>
    </EuiPanel>
  </SpanDetailPanel>
  <EuiSpacer
    size="xs"
  >
    <div
      className="euiSpacer euiSpacer--xs"
    />
  </EuiSpacer>
  <EuiHorizontalRule
    margin="s"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginSmall"
    />
  </EuiHorizontalRule>
  <EuiText
    size="m"
  >
    <div
      className="euiText euiText--medium"
    >
      <span
        className="panel-title"
      >
        Payload
      </span>
    </div>
  </EuiText>
  <EuiSpacer
    size="s"
  >
    <div
      className="euiSpacer euiSpacer--s"
    />
  </EuiSpacer>
</TraceDetailRender>
`;
