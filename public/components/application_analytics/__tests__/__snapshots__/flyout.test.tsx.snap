// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Trace Detail Render Flyout component render trace detail 1`] = `
<TraceDetailRender
  http={[MockFunction]}
  mode="jaeger"
  openSpanFlyout={[Function]}
  traceId="mockTrace"
>
  <EuiText
    size="m"
  >
    <div
      className="euiText euiText--medium"
    >
      <span
        className="panel-title"
      >
        Overview
      </span>
    </div>
  </EuiText>
  <EuiSpacer
    size="s"
  >
    <div
      className="euiSpacer euiSpacer--s"
    />
  </EuiSpacer>
  <div
    key="list-item-Trace Id"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="Trace IdDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b>
                mockTrace
              </b>
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Trace Id
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="Trace IdDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Trace Id
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b>
                  mockTrace
                </b>
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Trace group name"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="Trace group nameDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b>
                -
              </b>
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Trace group name
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="Trace group nameDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Trace group name
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b>
                  -
                </b>
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Latency"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="LatencyDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b />
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Latency
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="LatencyDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Latency
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b />
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Last updated"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="Last updatedDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b />
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Last updated
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="Last updatedDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Last updated
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b />
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <div
    key="list-item-Errors"
  >
    <EuiDescriptionList
      align="center"
      compressed={true}
      data-test-subj="ErrorsDescriptionList"
      listItems={
        Array [
          Object {
            "description": <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <b>
                <React.Fragment />
              </b>
            </EuiText>,
            "title": <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              Errors
            </EuiText>,
          },
        ]
      }
      type="column"
    >
      <dl
        className="euiDescriptionList euiDescriptionList--column euiDescriptionList--center euiDescriptionList--compressed"
        data-test-subj="ErrorsDescriptionList"
      >
        <EuiDescriptionListTitle
          key="title-0"
        >
          <dt
            className="euiDescriptionList__title"
          >
            <EuiText
              color="subdued"
              size="s"
              style={
                Object {
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <EuiTextColor
                  color="subdued"
                  component="div"
                >
                  <div
                    className="euiTextColor euiTextColor--subdued"
                  >
                    Errors
                  </div>
                </EuiTextColor>
              </div>
            </EuiText>
          </dt>
        </EuiDescriptionListTitle>
        <EuiDescriptionListDescription
          key="description-0"
        >
          <dd
            className="euiDescriptionList__description"
          >
            <EuiText
              size="s"
              style={
                Object {
                  "whiteSpace": "pre-line",
                  "wordBreak": "break-all",
                  "wordWrap": "break-word",
                }
              }
            >
              <div
                className="euiText euiText--small"
                style={
                  Object {
                    "whiteSpace": "pre-line",
                    "wordBreak": "break-all",
                    "wordWrap": "break-word",
                  }
                }
              >
                <b />
              </div>
            </EuiText>
          </dd>
        </EuiDescriptionListDescription>
      </dl>
    </EuiDescriptionList>
    <EuiSpacer
      size="s"
    >
      <div
        className="euiSpacer euiSpacer--s"
      />
    </EuiSpacer>
  </div>
  <EuiSpacer
    size="xs"
  >
    <div
      className="euiSpacer euiSpacer--xs"
    />
  </EuiSpacer>
  <EuiHorizontalRule
    margin="s"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginSmall"
    />
  </EuiHorizontalRule>
  <ServiceBreakdownPanel
    data={Array []}
  >
    <EuiPanel>
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
      >
        <PanelTitle
          data-test-subj="time-spent-by-service-panel"
          title="Time spent by service"
        >
          <EuiText
            size="m"
          >
            <div
              className="euiText euiText--medium"
            >
              <span
                className="panel-title"
              >
                Time spent by service
              </span>
            </div>
          </EuiText>
        </PanelTitle>
        <EuiHorizontalRule
          margin="m"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
          />
        </EuiHorizontalRule>
        <EuiFlexGroup
          alignItems="center"
          gutterSize="m"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={3}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrow3"
              />
            </EuiFlexItem>
            <EuiFlexItem
              grow={3}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrow3"
              />
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiSpacer>
          <div
            className="euiSpacer euiSpacer--l"
          />
        </EuiSpacer>
      </div>
    </EuiPanel>
  </ServiceBreakdownPanel>
  <EuiSpacer
    size="xs"
  >
    <div
      className="euiSpacer euiSpacer--xs"
    />
  </EuiSpacer>
  <EuiHorizontalRule
    margin="s"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginSmall"
    />
  </EuiHorizontalRule>
  <SpanDetailPanel
    colorMap={Object {}}
    http={[MockFunction]}
    isApplicationFlyout={true}
    mode="jaeger"
    onSpanClick={[Function]}
    payloadData=""
    setSpanFiltersWithStorage={[Function]}
    spanFilters={Array []}
    traceId="mockTrace"
  >
    <EuiPanel
      data-test-subj="span-timeline-panel"
      panelRef={
        Object {
          "current": <div
            class="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
            data-test-subj="span-timeline-panel"
          >
            <div
              class="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--directionColumn euiFlexGroup--responsive"
            >
              <div
                class="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <div
                  class="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                >
                  <div
                    class="euiFlexItem"
                  >
                    <div
                      class="euiText euiText--medium"
                    >
                      <span
                        class="panel-title"
                      >
                        Spans
                      </span>
                      <span
                        class="panel-title-count"
                      >
                         (0)
                      </span>
                    </div>
                  </div>
                  <div
                    class="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <div
                      class="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                    >
                      <div
                        class="euiFlexItem euiFlexItem--flexGrowZero"
                      >
                        <fieldset
                          class="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                        >
                          <legend
                            class="euiScreenReaderOnly"
                          >
                            Select view of spans
                          </legend>
                          <div
                            class="euiButtonGroup__buttons"
                          >
                            <label
                              class="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected"
                              for="random_html_id"
                            >
                              <span
                                class="euiButtonContent euiButton__content"
                              >
                                <span
                                  class="euiButton__text euiButtonGroupButton__textShift"
                                  data-text="Timeline"
                                  title="Timeline"
                                >
                                  <input
                                    checked=""
                                    class="euiScreenReaderOnly"
                                    data-test-subj="timeline"
                                    id="random_html_id"
                                    name="random_html_id"
                                    type="radio"
                                    value=""
                                  />
                                  Timeline
                                </span>
                              </span>
                            </label>
                            <label
                              class="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                              for="random_html_id"
                            >
                              <span
                                class="euiButtonContent euiButton__content"
                              >
                                <span
                                  class="euiButton__text euiButtonGroupButton__textShift"
                                  data-text="Span list"
                                  title="Span list"
                                >
                                  <input
                                    class="euiScreenReaderOnly"
                                    data-test-subj="span_list"
                                    id="random_html_id"
                                    name="random_html_id"
                                    type="radio"
                                    value=""
                                  />
                                  Span list
                                </span>
                              </span>
                            </label>
                            <label
                              class="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                              for="random_html_id"
                            >
                              <span
                                class="euiButtonContent euiButton__content"
                              >
                                <span
                                  class="euiButton__text euiButtonGroupButton__textShift"
                                  data-text="Tree view"
                                  title="Tree view"
                                >
                                  <input
                                    class="euiScreenReaderOnly"
                                    data-test-subj="hierarchy_span_list"
                                    id="random_html_id"
                                    name="random_html_id"
                                    type="radio"
                                    value=""
                                  />
                                  Tree view
                                </span>
                              </span>
                            </label>
                          </div>
                        </fieldset>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <hr
                class="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
              />
              <div
                class="euiFlexItem"
              >
                <div
                  class="euiEmptyPrompt"
                >
                  <h2
                    class="euiTitle euiTitle--medium"
                  >
                    No spans found
                  </h2>
                  <span
                    class="euiTextColor euiTextColor--subdued"
                  >
                    <div
                      class="euiSpacer euiSpacer--m"
                    />
                    <div
                      class="euiText euiText--medium"
                    >
                      <p>
                        No spans found for the selected filters
                      </p>
                    </div>
                  </span>
                </div>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        data-test-subj="span-timeline-panel"
      >
        <EuiFlexGroup
          direction="column"
          gutterSize="m"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--directionColumn euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup>
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem>
                      <div
                        className="euiFlexItem"
                      >
                        <PanelTitle
                          title="Spans"
                          totalItems={0}
                        >
                          <EuiText
                            size="m"
                          >
                            <div
                              className="euiText euiText--medium"
                            >
                              <span
                                className="panel-title"
                              >
                                Spans
                              </span>
                              <span
                                className="panel-title-count"
                              >
                                 (0)
                              </span>
                            </div>
                          </EuiText>
                        </PanelTitle>
                      </div>
                    </EuiFlexItem>
                    <EuiFlexItem
                      grow={false}
                    >
                      <div
                        className="euiFlexItem euiFlexItem--flexGrowZero"
                      >
                        <EuiFlexGroup
                          alignItems="center"
                          gutterSize="s"
                          justifyContent="flexEnd"
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                          >
                            <EuiFlexItem
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiButtonGroup
                                  idSelected="timeline"
                                  legend="Select view of spans"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "id": "timeline",
                                        "label": "Timeline",
                                      },
                                      Object {
                                        "id": "span_list",
                                        "label": "Span list",
                                      },
                                      Object {
                                        "id": "hierarchy_span_list",
                                        "label": "Tree view",
                                      },
                                    ]
                                  }
                                >
                                  <fieldset
                                    className="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                                    disabled={false}
                                  >
                                    <EuiScreenReaderOnly>
                                      <legend
                                        className="euiScreenReaderOnly"
                                      >
                                        Select view of spans
                                      </legend>
                                    </EuiScreenReaderOnly>
                                    <div
                                      className="euiButtonGroup__buttons"
                                    >
                                      <EuiButtonGroupButton
                                        color="text"
                                        element="label"
                                        id="timeline"
                                        isDisabled={false}
                                        isIconOnly={false}
                                        isSelected={true}
                                        key="0"
                                        label="Timeline"
                                        name="random_html_id"
                                        onChange={[Function]}
                                        size="s"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButtonGroupButton"
                                          className="euiButtonGroupButton-isSelected"
                                          color="text"
                                          element="label"
                                          fill={true}
                                          htmlFor="random_html_id"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiButtonGroupButton__textShift",
                                              "data-text": "Timeline",
                                              "ref": [Function],
                                              "title": "Timeline",
                                            }
                                          }
                                        >
                                          <label
                                            className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected"
                                            disabled={false}
                                            htmlFor="random_html_id"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiButtonGroupButton__textShift",
                                                  "data-text": "Timeline",
                                                  "ref": [Function],
                                                  "title": "Timeline",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text euiButtonGroupButton__textShift"
                                                  data-text="Timeline"
                                                  title="Timeline"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="euiScreenReaderOnly"
                                                    data-test-subj="timeline"
                                                    disabled={false}
                                                    id="random_html_id"
                                                    name="random_html_id"
                                                    onChange={[Function]}
                                                    type="radio"
                                                  />
                                                  Timeline
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </label>
                                        </EuiButtonDisplay>
                                      </EuiButtonGroupButton>
                                      <EuiButtonGroupButton
                                        color="text"
                                        element="label"
                                        id="span_list"
                                        isDisabled={false}
                                        isIconOnly={false}
                                        isSelected={false}
                                        key="1"
                                        label="Span list"
                                        name="random_html_id"
                                        onChange={[Function]}
                                        size="s"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButtonGroupButton"
                                          className=""
                                          color="text"
                                          element="label"
                                          fill={false}
                                          htmlFor="random_html_id"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiButtonGroupButton__textShift",
                                              "data-text": "Span list",
                                              "ref": [Function],
                                              "title": "Span list",
                                            }
                                          }
                                        >
                                          <label
                                            className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                            disabled={false}
                                            htmlFor="random_html_id"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiButtonGroupButton__textShift",
                                                  "data-text": "Span list",
                                                  "ref": [Function],
                                                  "title": "Span list",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text euiButtonGroupButton__textShift"
                                                  data-text="Span list"
                                                  title="Span list"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="euiScreenReaderOnly"
                                                    data-test-subj="span_list"
                                                    disabled={false}
                                                    id="random_html_id"
                                                    name="random_html_id"
                                                    onChange={[Function]}
                                                    type="radio"
                                                  />
                                                  Span list
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </label>
                                        </EuiButtonDisplay>
                                      </EuiButtonGroupButton>
                                      <EuiButtonGroupButton
                                        color="text"
                                        element="label"
                                        id="hierarchy_span_list"
                                        isDisabled={false}
                                        isIconOnly={false}
                                        isSelected={false}
                                        key="2"
                                        label="Tree view"
                                        name="random_html_id"
                                        onChange={[Function]}
                                        size="s"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButtonGroupButton"
                                          className=""
                                          color="text"
                                          element="label"
                                          fill={false}
                                          htmlFor="random_html_id"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiButtonGroupButton__textShift",
                                              "data-text": "Tree view",
                                              "ref": [Function],
                                              "title": "Tree view",
                                            }
                                          }
                                        >
                                          <label
                                            className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                            disabled={false}
                                            htmlFor="random_html_id"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiButtonGroupButton__textShift",
                                                  "data-text": "Tree view",
                                                  "ref": [Function],
                                                  "title": "Tree view",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text euiButtonGroupButton__textShift"
                                                  data-text="Tree view"
                                                  title="Tree view"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="euiScreenReaderOnly"
                                                    data-test-subj="hierarchy_span_list"
                                                    disabled={false}
                                                    id="random_html_id"
                                                    name="random_html_id"
                                                    onChange={[Function]}
                                                    type="radio"
                                                  />
                                                  Tree view
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </label>
                                        </EuiButtonDisplay>
                                      </EuiButtonGroupButton>
                                    </div>
                                  </fieldset>
                                </EuiButtonGroup>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
            <EuiHorizontalRule
              margin="m"
            >
              <hr
                className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
              />
            </EuiHorizontalRule>
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <SpanDetailTimeline
                  colorMap={Object {}}
                  compact={true}
                  filters={Array []}
                  mode="jaeger"
                  onSpanClick={[Function]}
                  payloadData=""
                >
                  <EuiEmptyPrompt
                    body={
                      <p>
                        No spans found for the selected filters
                      </p>
                    }
                    title={
                      <h2>
                        No spans found
                      </h2>
                    }
                  >
                    <div
                      className="euiEmptyPrompt"
                    >
                      <EuiTitle
                        size="m"
                      >
                        <h2
                          className="euiTitle euiTitle--medium"
                        >
                          No spans found
                        </h2>
                      </EuiTitle>
                      <EuiTextColor
                        color="subdued"
                      >
                        <span
                          className="euiTextColor euiTextColor--subdued"
                        >
                          <EuiSpacer
                            size="m"
                          >
                            <div
                              className="euiSpacer euiSpacer--m"
                            />
                          </EuiSpacer>
                          <EuiText>
                            <div
                              className="euiText euiText--medium"
                            >
                              <p>
                                No spans found for the selected filters
                              </p>
                            </div>
                          </EuiText>
                        </span>
                      </EuiTextColor>
                    </div>
                  </EuiEmptyPrompt>
                </SpanDetailTimeline>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </div>
    </EuiPanel>
  </SpanDetailPanel>
  <EuiSpacer
    size="xs"
  >
    <div
      className="euiSpacer euiSpacer--xs"
    />
  </EuiSpacer>
  <EuiHorizontalRule
    margin="s"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginSmall"
    />
  </EuiHorizontalRule>
  <EuiText
    size="m"
  >
    <div
      className="euiText euiText--medium"
    >
      <span
        className="panel-title"
      >
        Payload
      </span>
    </div>
  </EuiText>
  <EuiSpacer
    size="s"
  >
    <div
      className="euiSpacer euiSpacer--s"
    />
  </EuiSpacer>
</TraceDetailRender>
`;
