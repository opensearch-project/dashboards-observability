// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Side Bar Component renders Side Bar Component 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <Component>
    <I18nProvider>
      <IntlProvider
        defaultLocale="en"
        formats={
          Object {
            "date": Object {
              "full": Object {
                "day": "numeric",
                "month": "long",
                "weekday": "long",
                "year": "numeric",
              },
              "long": Object {
                "day": "numeric",
                "month": "long",
                "year": "numeric",
              },
              "medium": Object {
                "day": "numeric",
                "month": "short",
                "year": "numeric",
              },
              "short": Object {
                "day": "numeric",
                "month": "numeric",
                "year": "2-digit",
              },
            },
            "number": Object {
              "currency": Object {
                "style": "currency",
              },
              "percent": Object {
                "style": "percent",
              },
            },
            "relative": Object {
              "days": Object {
                "units": "day",
              },
              "hours": Object {
                "units": "hour",
              },
              "minutes": Object {
                "units": "minute",
              },
              "months": Object {
                "units": "month",
              },
              "seconds": Object {
                "units": "second",
              },
              "years": Object {
                "units": "year",
              },
            },
            "time": Object {
              "full": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
                "timeZoneName": "short",
              },
              "long": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
                "timeZoneName": "short",
              },
              "medium": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
              },
              "short": Object {
                "hour": "numeric",
                "minute": "numeric",
              },
            },
          }
        }
        locale="en"
        messages={Object {}}
        textComponent={Symbol(react.fragment)}
      >
        <PseudoLocaleWrapper>
          <section
            className="sidebarHeight"
          >
            <Component>
              <div
                className="metrics-search-bar-input"
                data-test-subj="metricsSearch"
              >
                <EuiSearchBar
                  box={
                    Object {
                      "incremental": true,
                      "placeholder": "Search for metrics",
                    }
                  }
                  defaultQuery=""
                  onChange={[Function]}
                  query=""
                >
                  <EuiFlexGroup
                    alignItems="center"
                    gutterSize="m"
                    wrap={true}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                    >
                      <EuiFlexItem
                        className="euiSearchBar__searchHolder"
                        grow={true}
                      >
                        <div
                          className="euiFlexItem euiSearchBar__searchHolder"
                        >
                          <EuiSearchBox
                            incremental={true}
                            isInvalid={false}
                            onSearch={[Function]}
                            placeholder="Search for metrics"
                            query=""
                          >
                            <EuiFieldSearch
                              aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                              compressed={false}
                              defaultValue=""
                              fullWidth={true}
                              incremental={true}
                              inputRef={[Function]}
                              isClearable={true}
                              isInvalid={false}
                              isLoading={false}
                              onSearch={[Function]}
                              placeholder="Search for metrics"
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={true}
                                icon="search"
                                isLoading={false}
                              >
                                <div
                                  className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <EuiValidatableControl
                                      isInvalid={false}
                                    >
                                      <input
                                        aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                        className="euiFieldSearch euiFieldSearch--fullWidth"
                                        defaultValue=""
                                        onKeyUp={[Function]}
                                        placeholder="Search for metrics"
                                        type="search"
                                      />
                                    </EuiValidatableControl>
                                    <EuiFormControlLayoutIcons
                                      compressed={false}
                                      icon="search"
                                      isLoading={false}
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          size="m"
                                          type="search"
                                        >
                                          <span
                                            className="euiFormControlLayoutCustomIcon"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              size="m"
                                              type="search"
                                            >
                                              <EuiIconEmpty
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                />
                                              </EuiIconEmpty>
                                            </EuiIcon>
                                          </span>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiFieldSearch>
                          </EuiSearchBox>
                        </div>
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </EuiSearchBar>
              </div>
            </Component>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <Component
              dataTestSubj="metricsListItems_selectedMetrics"
              handleClick={[Function]}
              headerName="Selected Metrics"
              metricsList={Array []}
            >
              <EuiAccordion
                arrowDisplay="left"
                buttonContent={
                  <EuiTitle
                    size="xxxs"
                  >
                    <span>
                      Selected Metrics
                       
                      0
                       of 
                      0
                    </span>
                  </EuiTitle>
                }
                id="Selected MetricsSelector"
                initialIsOpen={true}
                isLoading={false}
                isLoadingMessage={false}
                paddingSize="none"
              >
                <div
                  className="euiAccordion euiAccordion-isOpen"
                >
                  <div
                    className="euiAccordion__triggerWrapper"
                  >
                    <button
                      aria-controls="Selected MetricsSelector"
                      aria-expanded={true}
                      className="euiAccordion__button"
                      id="random_html_id"
                      onClick={[Function]}
                      type="button"
                    >
                      <span
                        className="euiAccordion__iconWrapper"
                      >
                        <EuiIcon
                          className="euiAccordion__icon euiAccordion__icon-isOpen"
                          size="m"
                          type="arrowRight"
                        >
                          <EuiIconEmpty
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            />
                          </EuiIconEmpty>
                        </EuiIcon>
                      </span>
                      <span
                        className="euiIEFlexWrapFix"
                      >
                        <EuiTitle
                          size="xxxs"
                        >
                          <span
                            className="euiTitle euiTitle--xxxsmall"
                          >
                            Selected Metrics
                             
                            0
                             of 
                            0
                          </span>
                        </EuiTitle>
                      </span>
                    </button>
                  </div>
                  <div
                    aria-labelledby="random_html_id"
                    className="euiAccordion__childWrapper"
                    id="Selected MetricsSelector"
                    role="region"
                    tabIndex={-1}
                  >
                    <EuiResizeObserver
                      onResize={[Function]}
                    >
                      <div>
                        <div
                          className=""
                        >
                          <ul
                            className="metricsList"
                          />
                        </div>
                      </div>
                    </EuiResizeObserver>
                  </div>
                </div>
              </EuiAccordion>
            </Component>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <Component
              dataTestSubj="metricsListItems_availableMetrics"
              handleClick={[Function]}
              headerName="Available Metrics"
              metricsList={Array []}
            >
              <EuiAccordion
                arrowDisplay="left"
                buttonContent={
                  <EuiTitle
                    size="xxxs"
                  >
                    <span>
                      Available Metrics
                       
                      0
                       of 
                      0
                    </span>
                  </EuiTitle>
                }
                id="Available MetricsSelector"
                initialIsOpen={true}
                isLoading={false}
                isLoadingMessage={false}
                paddingSize="none"
              >
                <div
                  className="euiAccordion euiAccordion-isOpen"
                >
                  <div
                    className="euiAccordion__triggerWrapper"
                  >
                    <button
                      aria-controls="Available MetricsSelector"
                      aria-expanded={true}
                      className="euiAccordion__button"
                      id="random_html_id"
                      onClick={[Function]}
                      type="button"
                    >
                      <span
                        className="euiAccordion__iconWrapper"
                      >
                        <EuiIcon
                          className="euiAccordion__icon euiAccordion__icon-isOpen"
                          size="m"
                          type="arrowRight"
                        >
                          <EuiIconEmpty
                            aria-hidden={true}
                            className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            />
                          </EuiIconEmpty>
                        </EuiIcon>
                      </span>
                      <span
                        className="euiIEFlexWrapFix"
                      >
                        <EuiTitle
                          size="xxxs"
                        >
                          <span
                            className="euiTitle euiTitle--xxxsmall"
                          >
                            Available Metrics
                             
                            0
                             of 
                            0
                          </span>
                        </EuiTitle>
                      </span>
                    </button>
                  </div>
                  <div
                    aria-labelledby="random_html_id"
                    className="euiAccordion__childWrapper"
                    id="Available MetricsSelector"
                    role="region"
                    tabIndex={-1}
                  >
                    <EuiResizeObserver
                      onResize={[Function]}
                    >
                      <div>
                        <div
                          className=""
                        >
                          <ul
                            className="metricsList"
                          />
                        </div>
                      </div>
                    </EuiResizeObserver>
                  </div>
                </div>
              </EuiAccordion>
            </Component>
          </section>
        </PseudoLocaleWrapper>
      </IntlProvider>
    </I18nProvider>
  </Component>
</Provider>
`;
