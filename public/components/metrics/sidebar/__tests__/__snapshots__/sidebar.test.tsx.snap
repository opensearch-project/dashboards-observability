// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Side Bar Component renders Side Bar Component 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <Sidebar
    selectedDataSource=""
    selectedOTIndex=""
    setSelectedDataSource={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    setSelectedOTIndex={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <I18nProvider>
      <IntlProvider
        defaultLocale="en"
        formats={
          Object {
            "date": Object {
              "full": Object {
                "day": "numeric",
                "month": "long",
                "weekday": "long",
                "year": "numeric",
              },
              "long": Object {
                "day": "numeric",
                "month": "long",
                "year": "numeric",
              },
              "medium": Object {
                "day": "numeric",
                "month": "short",
                "year": "numeric",
              },
              "short": Object {
                "day": "numeric",
                "month": "numeric",
                "year": "2-digit",
              },
            },
            "number": Object {
              "currency": Object {
                "style": "currency",
              },
              "percent": Object {
                "style": "percent",
              },
            },
            "relative": Object {
              "days": Object {
                "units": "day",
              },
              "hours": Object {
                "units": "hour",
              },
              "minutes": Object {
                "units": "minute",
              },
              "months": Object {
                "units": "month",
              },
              "seconds": Object {
                "units": "second",
              },
              "years": Object {
                "units": "year",
              },
            },
            "time": Object {
              "full": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
                "timeZoneName": "short",
              },
              "long": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
                "timeZoneName": "short",
              },
              "medium": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
              },
              "short": Object {
                "hour": "numeric",
                "minute": "numeric",
              },
            },
          }
        }
        locale="en"
        messages={Object {}}
        textComponent={Symbol(react.fragment)}
      >
        <PseudoLocaleWrapper>
          <div
            id="sidebar"
          >
            <DataSourcePicker
              selectedDataSource=""
              setSelectedDataSource={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                }
              }
            >
              <div
                className="metrics-data-source-picker"
              >
                <EuiTitle
                  size="xxxs"
                >
                  <h5
                    className="euiTitle euiTitle--xxxsmall"
                  >
                    Metrics source
                  </h5>
                </EuiTitle>
                <EuiComboBox
                  async={false}
                  compressed={false}
                  data-test-subj="metricsDataSourcePicker"
                  fullWidth={false}
                  isClearable={true}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "data-test-subj": "prometheusOption",
                        "label": "Prometheus",
                      },
                      Object {
                        "data-test-subj": "openTelemetryOption",
                        "label": "OpenTelemetry",
                      },
                    ]
                  }
                  placeholder="Select a metric source"
                  selectedOptions={Array []}
                  singleSelection={
                    Object {
                      "asPlainText": true,
                    }
                  }
                  sortMatchesBy="none"
                >
                  <div
                    aria-expanded={false}
                    aria-haspopup="listbox"
                    className="euiComboBox"
                    data-test-subj="metricsDataSourcePicker"
                    onKeyDown={[Function]}
                    role="combobox"
                  >
                    <EuiComboBoxInput
                      autoSizeInputRef={[Function]}
                      compressed={false}
                      fullWidth={false}
                      hasSelectedOptions={false}
                      inputRef={[Function]}
                      isListOpen={false}
                      noIcon={false}
                      onChange={[Function]}
                      onClear={[Function]}
                      onClick={[Function]}
                      onCloseListClick={[Function]}
                      onFocus={[Function]}
                      onOpenListClick={[Function]}
                      onRemoveOption={[Function]}
                      placeholder="Select a metric source"
                      rootId={[Function]}
                      searchValue=""
                      selectedOptions={Array []}
                      singleSelection={
                        Object {
                          "asPlainText": true,
                        }
                      }
                      toggleButtonRef={[Function]}
                      updatePosition={[Function]}
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "aria-label": "Open list of options",
                            "data-test-subj": "comboBoxToggleListButton",
                            "disabled": undefined,
                            "onClick": [Function],
                            "ref": [Function],
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <div
                              className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                              data-test-subj="comboBoxInput"
                              onClick={[Function]}
                              tabIndex={-1}
                            >
                              <p
                                className="euiComboBoxPlaceholder"
                              >
                                Select a metric source
                              </p>
                              <AutosizeInput
                                aria-controls=""
                                className="euiComboBox__input"
                                data-test-subj="comboBoxSearchInput"
                                injectStyles={true}
                                inputRef={[Function]}
                                minWidth={1}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                role="textbox"
                                style={
                                  Object {
                                    "fontSize": 14,
                                  }
                                }
                                value=""
                              >
                                <div
                                  className="euiComboBox__input"
                                  style={
                                    Object {
                                      "display": "inline-block",
                                      "fontSize": 14,
                                    }
                                  }
                                >
                                  <input
                                    aria-controls=""
                                    data-test-subj="comboBoxSearchInput"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    role="textbox"
                                    style={
                                      Object {
                                        "boxSizing": "content-box",
                                        "width": "2px",
                                      }
                                    }
                                    value=""
                                  />
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "scroll",
                                        "position": "absolute",
                                        "top": 0,
                                        "visibility": "hidden",
                                        "whiteSpace": "pre",
                                      }
                                    }
                                  />
                                </div>
                              </AutosizeInput>
                            </div>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "aria-label": "Open list of options",
                                  "data-test-subj": "comboBoxToggleListButton",
                                  "disabled": undefined,
                                  "onClick": [Function],
                                  "ref": [Function],
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  aria-label="Open list of options"
                                  data-test-subj="comboBoxToggleListButton"
                                  iconRef={[Function]}
                                  onClick={[Function]}
                                  size="m"
                                  type="arrowDown"
                                >
                                  <button
                                    aria-label="Open list of options"
                                    className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                    data-test-subj="comboBoxToggleListButton"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconBeaker
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                          />
                                        </svg>
                                      </EuiIconBeaker>
                                    </EuiIcon>
                                  </button>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiComboBoxInput>
                  </div>
                </EuiComboBox>
              </div>
            </DataSourcePicker>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <SearchBar>
              <div
                className="metrics-search-bar-input"
                data-test-subj="metricsSearch"
              >
                <EuiSearchBar
                  box={
                    Object {
                      "incremental": true,
                      "placeholder": "Search to filter Available Metrics",
                    }
                  }
                  defaultQuery=""
                  onChange={[Function]}
                  query=""
                >
                  <EuiFlexGroup
                    alignItems="center"
                    gutterSize="m"
                    wrap={true}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                    >
                      <EuiFlexItem
                        className="euiSearchBar__searchHolder"
                        grow={true}
                      >
                        <div
                          className="euiFlexItem euiSearchBar__searchHolder"
                        >
                          <EuiSearchBox
                            incremental={true}
                            isInvalid={false}
                            onSearch={[Function]}
                            placeholder="Search to filter Available Metrics"
                            query=""
                          >
                            <EuiFieldSearch
                              aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                              compressed={false}
                              defaultValue=""
                              fullWidth={true}
                              incremental={true}
                              inputRef={[Function]}
                              isClearable={true}
                              isInvalid={false}
                              isLoading={false}
                              onSearch={[Function]}
                              placeholder="Search to filter Available Metrics"
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={true}
                                icon="search"
                                isLoading={false}
                              >
                                <div
                                  className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <EuiValidatableControl
                                      isInvalid={false}
                                    >
                                      <input
                                        aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                        className="euiFieldSearch euiFieldSearch--fullWidth"
                                        defaultValue=""
                                        onKeyUp={[Function]}
                                        placeholder="Search to filter Available Metrics"
                                        type="search"
                                      />
                                    </EuiValidatableControl>
                                    <EuiFormControlLayoutIcons
                                      compressed={false}
                                      icon="search"
                                      isLoading={false}
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          size="m"
                                          type="search"
                                        >
                                          <span
                                            className="euiFormControlLayoutCustomIcon"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              size="m"
                                              type="search"
                                            >
                                              <EuiIconBeaker
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                  />
                                                </svg>
                                              </EuiIconBeaker>
                                            </EuiIcon>
                                          </span>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiFieldSearch>
                          </EuiSearchBox>
                        </div>
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </EuiSearchBar>
              </div>
            </SearchBar>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <section
              className="sidebar"
            >
              <MetricsAccordion
                dataTestSubj="metricsListItems_selectedMetrics"
                handleClick={[Function]}
                headerName="Selected Metrics"
                metricsList={Array []}
              >
                <EuiAccordion
                  arrowDisplay="left"
                  buttonContent={
                    <EuiTitle
                      size="xxxs"
                    >
                      <span>
                        Selected Metrics
                         
                        0
                         of 
                        0
                      </span>
                    </EuiTitle>
                  }
                  id="Selected MetricsSelector"
                  initialIsOpen={true}
                  isLoading={false}
                  isLoadingMessage={false}
                  paddingSize="none"
                >
                  <div
                    className="euiAccordion euiAccordion-isOpen"
                  >
                    <div
                      className="euiAccordion__triggerWrapper"
                    >
                      <button
                        aria-controls="Selected MetricsSelector"
                        aria-expanded={true}
                        className="euiAccordion__button"
                        id="random_html_id"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="euiAccordion__iconWrapper"
                        >
                          <EuiIcon
                            className="euiAccordion__icon euiAccordion__icon-isOpen"
                            size="m"
                            type="arrowRight"
                          >
                            <EuiIconBeaker
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                              focusable="false"
                              role="img"
                              style={null}
                            >
                              <svg
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                focusable="false"
                                height={16}
                                role="img"
                                style={null}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                />
                              </svg>
                            </EuiIconBeaker>
                          </EuiIcon>
                        </span>
                        <span
                          className="euiIEFlexWrapFix"
                        >
                          <EuiTitle
                            size="xxxs"
                          >
                            <span
                              className="euiTitle euiTitle--xxxsmall"
                            >
                              Selected Metrics
                               
                              0
                               of 
                              0
                            </span>
                          </EuiTitle>
                        </span>
                      </button>
                    </div>
                    <div
                      aria-labelledby="random_html_id"
                      className="euiAccordion__childWrapper"
                      id="Selected MetricsSelector"
                      role="region"
                      tabIndex={-1}
                    >
                      <EuiResizeObserver
                        onResize={[Function]}
                      >
                        <div>
                          <div
                            className=""
                          >
                            <ul
                              className="metricsList"
                            />
                          </div>
                        </div>
                      </EuiResizeObserver>
                    </div>
                  </div>
                </EuiAccordion>
              </MetricsAccordion>
              <EuiSpacer
                size="s"
              >
                <div
                  className="euiSpacer euiSpacer--s"
                />
              </EuiSpacer>
              <MetricsAccordion
                dataTestSubj="metricsListItems_availableMetrics"
                handleClick={[Function]}
                headerName="Available Metrics"
                metricsList={Array []}
              >
                <EuiAccordion
                  arrowDisplay="left"
                  buttonContent={
                    <EuiTitle
                      size="xxxs"
                    >
                      <span>
                        Available Metrics
                         
                        0
                         of 
                        0
                      </span>
                    </EuiTitle>
                  }
                  id="Available MetricsSelector"
                  initialIsOpen={true}
                  isLoading={false}
                  isLoadingMessage={false}
                  paddingSize="none"
                >
                  <div
                    className="euiAccordion euiAccordion-isOpen"
                  >
                    <div
                      className="euiAccordion__triggerWrapper"
                    >
                      <button
                        aria-controls="Available MetricsSelector"
                        aria-expanded={true}
                        className="euiAccordion__button"
                        id="random_html_id"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="euiAccordion__iconWrapper"
                        >
                          <EuiIcon
                            className="euiAccordion__icon euiAccordion__icon-isOpen"
                            size="m"
                            type="arrowRight"
                          >
                            <EuiIconBeaker
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                              focusable="false"
                              role="img"
                              style={null}
                            >
                              <svg
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                                focusable="false"
                                height={16}
                                role="img"
                                style={null}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                />
                              </svg>
                            </EuiIconBeaker>
                          </EuiIcon>
                        </span>
                        <span
                          className="euiIEFlexWrapFix"
                        >
                          <EuiTitle
                            size="xxxs"
                          >
                            <span
                              className="euiTitle euiTitle--xxxsmall"
                            >
                              Available Metrics
                               
                              0
                               of 
                              0
                            </span>
                          </EuiTitle>
                        </span>
                      </button>
                    </div>
                    <div
                      aria-labelledby="random_html_id"
                      className="euiAccordion__childWrapper"
                      id="Available MetricsSelector"
                      role="region"
                      tabIndex={-1}
                    >
                      <EuiResizeObserver
                        onResize={[Function]}
                      >
                        <div>
                          <div
                            className=""
                          >
                            <ul
                              className="metricsList"
                            />
                          </div>
                        </div>
                      </EuiResizeObserver>
                    </div>
                  </div>
                </EuiAccordion>
              </MetricsAccordion>
            </section>
          </div>
        </PseudoLocaleWrapper>
      </IntlProvider>
    </I18nProvider>
  </Sidebar>
</Provider>
`;
