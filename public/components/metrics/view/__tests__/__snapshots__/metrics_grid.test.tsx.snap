// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Metrics Grid Component renders Metrics Grid Component 1`] = `
<div
  className="react-grid-layout layout full-width"
  style={
    Object {
      "height": "970px",
    }
  }
>
  <div
    className="react-grid-item static cssTransforms"
    key="Y4muP4QBiaYaSxpXk7r8"
    style={
      Object {
        "MozTransform": "translate(10px,10px)",
        "OTransform": "translate(10px,10px)",
        "WebkitTransform": "translate(10px,10px)",
        "height": "310px",
        "msTransform": "translate(10px,10px)",
        "position": "absolute",
        "transform": "translate(10px,10px)",
        "width": "-20px",
      }
    }
  >
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPanel--flexGrowZero panel-full-width"
      data-test-subj="VisualizationPanel"
    >
      <div
        className=""
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <div
            className="euiFlexItem"
            style={
              Object {
                "width": "35%",
              }
            }
          >
            <div
              className="euiText euiText--medium panels-title-text euiText--constrainedWidth"
            >
              <span
                className="euiToolTipAnchor"
                onKeyUp={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <h5
                  data-test-subj="visualizationHeader"
                  onBlur={[Function]}
                  onFocus={[Function]}
                />
              </span>
            </div>
          </div>
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero visualization-action-button"
          >
            <div
              className="euiPopover euiPopover--anchorDownLeft"
            >
              <div
                className="euiPopover__anchor"
              >
                <button
                  aria-label="actionMenuButton"
                  className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    aria-hidden={true}
                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                    focusable="false"
                    height={16}
                    role="img"
                    style={null}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  />
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="visualization-div"
      >
        <span
          className="euiLoadingChart euiLoadingChart--mono visualization-loading-chart euiLoadingChart--xLarge"
        >
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
        </span>
      </div>
    </div>
  </div>
  <div
    className="react-grid-item static cssTransforms"
    key="tomAP4QBiaYaSxpXALls"
    style={
      Object {
        "MozTransform": "translate(10px,330px)",
        "OTransform": "translate(10px,330px)",
        "WebkitTransform": "translate(10px,330px)",
        "height": "310px",
        "msTransform": "translate(10px,330px)",
        "position": "absolute",
        "transform": "translate(10px,330px)",
        "width": "-20px",
      }
    }
  >
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPanel--flexGrowZero panel-full-width"
      data-test-subj="VisualizationPanel"
    >
      <div
        className=""
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <div
            className="euiFlexItem"
            style={
              Object {
                "width": "35%",
              }
            }
          >
            <div
              className="euiText euiText--medium panels-title-text euiText--constrainedWidth"
            >
              <span
                className="euiToolTipAnchor"
                onKeyUp={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <h5
                  data-test-subj="visualizationHeader"
                  onBlur={[Function]}
                  onFocus={[Function]}
                />
              </span>
            </div>
          </div>
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero visualization-action-button"
          >
            <div
              className="euiPopover euiPopover--anchorDownLeft"
            >
              <div
                className="euiPopover__anchor"
              >
                <button
                  aria-label="actionMenuButton"
                  className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    aria-hidden={true}
                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                    focusable="false"
                    height={16}
                    role="img"
                    style={null}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  />
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="visualization-div"
      >
        <span
          className="euiLoadingChart euiLoadingChart--mono visualization-loading-chart euiLoadingChart--xLarge"
        >
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
        </span>
      </div>
    </div>
  </div>
  <div
    className="react-grid-item static cssTransforms"
    key="prometheus.process_resident_memory_bytes"
    style={
      Object {
        "MozTransform": "translate(10px,650px)",
        "OTransform": "translate(10px,650px)",
        "WebkitTransform": "translate(10px,650px)",
        "height": "310px",
        "msTransform": "translate(10px,650px)",
        "position": "absolute",
        "transform": "translate(10px,650px)",
        "width": "-20px",
      }
    }
  >
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPanel--flexGrowZero panel-full-width"
      data-test-subj="prometheus.process_resident_memory_bytesVisualizationPanel"
    >
      <div
        className=""
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <div
            className="euiFlexItem"
            style={
              Object {
                "width": "35%",
              }
            }
          >
            <div
              className="euiText euiText--medium panels-title-text euiText--constrainedWidth"
            >
              <span
                className="euiToolTipAnchor"
                onKeyUp={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <h5
                  data-test-subj="visualizationHeader"
                  onBlur={[Function]}
                  onFocus={[Function]}
                >
                  prometheus.process_resident_memory_bytes
                </h5>
              </span>
            </div>
          </div>
          <div
            className="euiFlexItem euiFlexItem--flexGrowZero visualization-action-button"
          >
            <div
              className="euiPopover euiPopover--anchorDownLeft"
            >
              <div
                className="euiPopover__anchor"
              >
                <button
                  aria-label="actionMenuButton"
                  className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    aria-hidden={true}
                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                    focusable="false"
                    height={16}
                    role="img"
                    style={null}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  />
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="visualization-div"
      >
        <span
          className="euiLoadingChart euiLoadingChart--mono visualization-loading-chart euiLoadingChart--xLarge"
        >
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
          <span
            className="euiLoadingChart__bar"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;
